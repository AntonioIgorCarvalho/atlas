{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useLocation, useHistory } from 'react-router';\nimport { useComparison } from '@store/comparisonContext';\nimport { useSelectedDistrict } from '@store/district/selectedContext';\nimport { useSidebar } from '@store/sidebarContext';\n\nconst useMain = () => {\n  _s();\n\n  const {\n    comparison,\n    addComparisonDistrict\n  } = useComparison();\n  const {\n    setIsSidebarOpen\n  } = useSidebar();\n  const {\n    all\n  } = useSelectedDistrict();\n  const location = useLocation();\n  const history = useHistory();\n  const [isComparisonModeEnabled, setIsComparisonModeEnabled] = useState(false);\n  useEffect(() => {\n    if (comparison.length === 0 && location.pathname.startsWith('/comparison/')) {\n      const pathIds = location.pathname.replace('/comparison/', '');\n\n      if (pathIds) {\n        const ids = pathIds.split('+');\n        const featuresFromUrl = all.filter(ft => ids.includes(ft.properties['CD_MUN'].toString()));\n        setIsSidebarOpen(true);\n        addComparisonDistrict(featuresFromUrl);\n      } else {\n        history.replace('/');\n      }\n    }\n  }, [location, history, comparison]);\n  useEffect(() => {\n    if (location.pathname.startsWith('/comparison/') && all.length !== 0) {\n      const ids = comparison.map(feature => feature.properties.CD_MUN);\n      const newPath = '/comparison/' + ids.join('+');\n\n      if (location.pathname !== newPath) {\n        history.replace(newPath);\n      }\n    }\n  }, [comparison, location, history]);\n  useEffect(() => {\n    setIsComparisonModeEnabled(location.pathname.startsWith('/comparison'));\n  }, [location]);\n  return {\n    isComparisonModeEnabled\n  };\n};\n\n_s(useMain, \"K60oGnTuahNTx03xJcTl0Q4WtXo=\", false, function () {\n  return [useComparison, useSidebar, useSelectedDistrict, useLocation, useHistory];\n});\n\nexport default useMain;","map":{"version":3,"names":["useEffect","useState","useLocation","useHistory","useComparison","useSelectedDistrict","useSidebar","useMain","comparison","addComparisonDistrict","setIsSidebarOpen","all","location","history","isComparisonModeEnabled","setIsComparisonModeEnabled","length","pathname","startsWith","pathIds","replace","ids","split","featuresFromUrl","filter","ft","includes","properties","toString","map","feature","CD_MUN","newPath","join"],"sources":["/Users/leonardogomes/Documents/atlas/atlas/src/pages/Main/hook/useMain.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useLocation, useHistory } from 'react-router';\n\nimport { useComparison } from '@store/comparisonContext';\nimport { useSelectedDistrict } from '@store/district/selectedContext';\nimport { useSidebar } from '@store/sidebarContext';\n\nconst useMain = () => {\n  const { comparison, addComparisonDistrict } = useComparison();\n  const { setIsSidebarOpen } = useSidebar();\n  const { all } = useSelectedDistrict();\n\n  const location = useLocation();\n  const history = useHistory();\n\n  const [isComparisonModeEnabled, setIsComparisonModeEnabled] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (comparison.length === 0 && location.pathname.startsWith('/comparison/')) {\n      const pathIds = location.pathname.replace('/comparison/', '');\n      if (pathIds) {\n        const ids = pathIds.split('+');\n        const featuresFromUrl = all.filter((ft: any) => ids.includes(ft.properties['CD_MUN'].toString()));\n        setIsSidebarOpen(true);\n        addComparisonDistrict(featuresFromUrl);\n      } else {\n        history.replace('/');\n      }\n    }\n  }, [location, history, comparison]);\n\n  useEffect(() => {\n    if (location.pathname.startsWith('/comparison/') && all.length !== 0) {\n      const ids = comparison.map((feature: any) => feature.properties.CD_MUN);\n      const newPath = '/comparison/' + ids.join('+');\n      if (location.pathname !== newPath) {\n        history.replace(newPath);\n      }\n    }\n  }, [comparison, location, history]);\n\n  useEffect(() => {\n    setIsComparisonModeEnabled(location.pathname.startsWith('/comparison'));\n  }, [location]);\n\n  return {\n    isComparisonModeEnabled,\n  };\n};\n\nexport default useMain;\n"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,cAAxC;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,mBAAT,QAAoC,iCAApC;AACA,SAASC,UAAT,QAA2B,uBAA3B;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACpB,MAAM;IAAEC,UAAF;IAAcC;EAAd,IAAwCL,aAAa,EAA3D;EACA,MAAM;IAAEM;EAAF,IAAuBJ,UAAU,EAAvC;EACA,MAAM;IAAEK;EAAF,IAAUN,mBAAmB,EAAnC;EAEA,MAAMO,QAAQ,GAAGV,WAAW,EAA5B;EACA,MAAMW,OAAO,GAAGV,UAAU,EAA1B;EAEA,MAAM,CAACW,uBAAD,EAA0BC,0BAA1B,IAAwDd,QAAQ,CAAU,KAAV,CAAtE;EAEAD,SAAS,CAAC,MAAM;IACd,IAAIQ,UAAU,CAACQ,MAAX,KAAsB,CAAtB,IAA2BJ,QAAQ,CAACK,QAAT,CAAkBC,UAAlB,CAA6B,cAA7B,CAA/B,EAA6E;MAC3E,MAAMC,OAAO,GAAGP,QAAQ,CAACK,QAAT,CAAkBG,OAAlB,CAA0B,cAA1B,EAA0C,EAA1C,CAAhB;;MACA,IAAID,OAAJ,EAAa;QACX,MAAME,GAAG,GAAGF,OAAO,CAACG,KAAR,CAAc,GAAd,CAAZ;QACA,MAAMC,eAAe,GAAGZ,GAAG,CAACa,MAAJ,CAAYC,EAAD,IAAaJ,GAAG,CAACK,QAAJ,CAAaD,EAAE,CAACE,UAAH,CAAc,QAAd,EAAwBC,QAAxB,EAAb,CAAxB,CAAxB;QACAlB,gBAAgB,CAAC,IAAD,CAAhB;QACAD,qBAAqB,CAACc,eAAD,CAArB;MACD,CALD,MAKO;QACLV,OAAO,CAACO,OAAR,CAAgB,GAAhB;MACD;IACF;EACF,CAZQ,EAYN,CAACR,QAAD,EAAWC,OAAX,EAAoBL,UAApB,CAZM,CAAT;EAcAR,SAAS,CAAC,MAAM;IACd,IAAIY,QAAQ,CAACK,QAAT,CAAkBC,UAAlB,CAA6B,cAA7B,KAAgDP,GAAG,CAACK,MAAJ,KAAe,CAAnE,EAAsE;MACpE,MAAMK,GAAG,GAAGb,UAAU,CAACqB,GAAX,CAAgBC,OAAD,IAAkBA,OAAO,CAACH,UAAR,CAAmBI,MAApD,CAAZ;MACA,MAAMC,OAAO,GAAG,iBAAiBX,GAAG,CAACY,IAAJ,CAAS,GAAT,CAAjC;;MACA,IAAIrB,QAAQ,CAACK,QAAT,KAAsBe,OAA1B,EAAmC;QACjCnB,OAAO,CAACO,OAAR,CAAgBY,OAAhB;MACD;IACF;EACF,CARQ,EAQN,CAACxB,UAAD,EAAaI,QAAb,EAAuBC,OAAvB,CARM,CAAT;EAUAb,SAAS,CAAC,MAAM;IACde,0BAA0B,CAACH,QAAQ,CAACK,QAAT,CAAkBC,UAAlB,CAA6B,aAA7B,CAAD,CAA1B;EACD,CAFQ,EAEN,CAACN,QAAD,CAFM,CAAT;EAIA,OAAO;IACLE;EADK,CAAP;AAGD,CAzCD;;GAAMP,O;UAC0CH,a,EACjBE,U,EACbD,mB,EAECH,W,EACDC,U;;;AAqClB,eAAeI,OAAf"},"metadata":{},"sourceType":"module"}