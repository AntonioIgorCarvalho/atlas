{"ast":null,"code":"import _slicedToArray from\"/Users/leonardogomes/Documents/atlas/atlas/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{createContext,useContext,useState}from'react';import geojsonBR from'@data/BR_UF_2020.json';import{DEFAULT_VALUE}from'@hook/useFeature';import{jsx as _jsx}from\"react/jsx-runtime\";var selectedStatesContext=/*#__PURE__*/createContext(DEFAULT_VALUE);export function SelectedStatesProvider(_ref){var children=_ref.children;//@ts-ignore\nvar allStates=geojsonBR['features'];var _useState=useState(allStates),_useState2=_slicedToArray(_useState,1),all=_useState2[0];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),selected=_useState4[0],setSelected=_useState4[1];return/*#__PURE__*/_jsx(selectedStatesContext.Provider,{value:{all:all,selected:selected,setSelected:setSelected},children:children});}export function useSelectedState(){var context=useContext(selectedStatesContext);var state=context;return state;}","map":{"version":3,"names":["React","createContext","useContext","useState","geojsonBR","DEFAULT_VALUE","selectedStatesContext","SelectedStatesProvider","children","allStates","all","selected","setSelected","useSelectedState","context","state"],"sources":["/Users/leonardogomes/Documents/atlas/atlas/src/store/state/selectedContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nimport { State } from '@customTypes/feature';\n\nimport geojsonBR from '@data/BR_UF_2020.json';\n\nimport { DEFAULT_VALUE } from '@hook/useFeature';\n\ninterface StateActions {\n  all: Array<State>;\n  selected: State | null;\n  setSelected: React.Dispatch<React.SetStateAction<any>>;\n}\n\nconst selectedStatesContext = createContext<StateActions>(DEFAULT_VALUE);\n\nexport function SelectedStatesProvider({ children }: any) {\n  //@ts-ignore\n  const allStates: Array<State> = geojsonBR['features'];\n\n  const [all] = useState(allStates);\n  const [selected, setSelected] = useState(null);\n\n  return (\n    <selectedStatesContext.Provider\n      value={{\n        all,\n        selected,\n        setSelected,\n      }}\n    >\n      {children}\n    </selectedStatesContext.Provider>\n  );\n}\n\nexport function useSelectedState() {\n  const context = useContext(selectedStatesContext);\n  const state = context;\n  return state;\n}\n"],"mappings":"gIAAA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,CAA+BC,UAA/B,CAA2CC,QAA3C,KAA2D,OAA3D,CAIA,MAAOC,CAAAA,SAAP,KAAsB,uBAAtB,CAEA,OAASC,aAAT,KAA8B,kBAA9B,C,2CAQA,GAAMC,CAAAA,qBAAqB,cAAGL,aAAa,CAAeI,aAAf,CAA3C,CAEA,MAAO,SAASE,CAAAA,sBAAT,MAAmD,IAAjBC,CAAAA,QAAiB,MAAjBA,QAAiB,CACxD;AACA,GAAMC,CAAAA,SAAuB,CAAGL,SAAS,CAAC,UAAD,CAAzC,CAEA,cAAcD,QAAQ,CAACM,SAAD,CAAtB,wCAAOC,GAAP,eACA,eAAgCP,QAAQ,CAAC,IAAD,CAAxC,yCAAOQ,QAAP,eAAiBC,WAAjB,eAEA,mBACE,KAAC,qBAAD,CAAuB,QAAvB,EACE,KAAK,CAAE,CACLF,GAAG,CAAHA,GADK,CAELC,QAAQ,CAARA,QAFK,CAGLC,WAAW,CAAXA,WAHK,CADT,UAOGJ,QAPH,EADF,CAWD,CAED,MAAO,SAASK,CAAAA,gBAAT,EAA4B,CACjC,GAAMC,CAAAA,OAAO,CAAGZ,UAAU,CAACI,qBAAD,CAA1B,CACA,GAAMS,CAAAA,KAAK,CAAGD,OAAd,CACA,MAAOC,CAAAA,KAAP,CACD"},"metadata":{},"sourceType":"module"}