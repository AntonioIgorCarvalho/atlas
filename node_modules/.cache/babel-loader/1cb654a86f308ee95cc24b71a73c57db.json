{"ast":null,"code":"var _jsxFileName = \"/Users/leonardogomes/Documents/atlas/atlas/src/components/Map/hook/useStateLayer/stateActions.tsx\";\nimport React from 'react';\nimport * as turf from '@turf/turf';\nimport ReactDOM from 'react-dom';\nimport { ClickablePopup } from '@components/Map/components';\nimport { clickedPopup, hoveredPopup } from '../../const';\nimport { isDistrictLayerVisible } from '../useDistrictLayer/districtActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet hoveredId;\nlet clickedId;\nexport function addClickPopup(feature, map, lngLat, type) {\n  var _feature$properties;\n\n  const regionName = feature === null || feature === void 0 ? void 0 : (_feature$properties = feature.properties) === null || _feature$properties === void 0 ? void 0 : _feature$properties.NM_UF;\n  const placeholder = document.createElement('div');\n\n  if (regionName) {\n    if (type === 'Click') {\n      ReactDOM.render( /*#__PURE__*/_jsxDEV(ClickablePopup, {\n        regionName: regionName,\n        reference: map,\n        feature: feature\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 23\n      }, this), placeholder);\n      clickedPopup.setLngLat(lngLat).setDOMContent(placeholder).addTo(map);\n    } else if (type === 'Hover') {\n      hoveredPopup.trackPointer().setHTML(`<h5>${regionName}</h5>`).addTo(map);\n    }\n  }\n}\n\nfunction setFeatureHover(featureID, map, state) {\n  map.setFeatureState({\n    source: 'state',\n    id: featureID\n  }, {\n    hover: state\n  });\n}\n\nfunction setFeatureClick(featureID, map, state) {\n  map.setFeatureState({\n    source: 'state',\n    id: featureID\n  }, {\n    hover: state\n  });\n}\n\nexport function clickState(feature, map) {\n  var _feature$properties2;\n\n  const stateID = feature === null || feature === void 0 ? void 0 : (_feature$properties2 = feature.properties) === null || _feature$properties2 === void 0 ? void 0 : _feature$properties2.CD_UF;\n\n  if (feature && feature.geometry) {\n    if (stateID === clickedId) {\n      return;\n    }\n\n    if (clickedId) {\n      setFeatureClick(clickedId, map, false);\n    }\n\n    if (stateID) {\n      setFeatureClick(stateID, map, true);\n      clickedId = stateID;\n    }\n  } else if (clickedId) {\n    if (map.getSource('state')) {\n      setFeatureClick(clickedId, map, false);\n    }\n\n    clickedId = undefined;\n  }\n}\nexport function highlightState(feature, map) {\n  var _feature$properties3;\n\n  const stateID = feature === null || feature === void 0 ? void 0 : (_feature$properties3 = feature.properties) === null || _feature$properties3 === void 0 ? void 0 : _feature$properties3.CD_UF;\n\n  if (feature && feature.geometry) {\n    if (stateID === hoveredId) {\n      return;\n    }\n\n    if (hoveredId) {\n      setFeatureHover(hoveredId, map, false);\n    }\n\n    if (stateID) {\n      setFeatureHover(stateID, map, true);\n      hoveredId = stateID;\n    }\n  } else if (hoveredId) {\n    hoveredPopup.remove();\n\n    if (map.getSource('state')) {\n      setFeatureHover(hoveredId, map, false);\n    }\n\n    hoveredId = undefined;\n  }\n}\nexport function isStateLayerVisible(map, visible) {\n  const visibility = visible ? 'visible' : 'none';\n\n  if (map.getLayer('fill-state')) {\n    map.setLayoutProperty('fill-state', 'visibility', visibility);\n  }\n\n  if (map.getLayer('state-borders')) {\n    map.setLayoutProperty('state-borders', 'visibility', visibility);\n  }\n}\nexport const handleCleanStateLayer = map => {\n  isStateLayerVisible(map, false);\n  isDistrictLayerVisible(map, true);\n  cleanStateActions();\n};\nexport function cleanStateActions() {\n  hoveredPopup.remove();\n  clickedPopup.remove();\n  clickedId = 0;\n  hoveredId = undefined;\n}\nexport function fitStateBounds(feature, map) {\n  if (feature && (feature.geometry || feature._geometry)) {\n    const [minX, minY, maxX, maxY] = turf.bbox(feature);\n    map.fitBounds([[minX, minY], [maxX, maxY]], {\n      padding: {\n        top: 100,\n        bottom: 100,\n        left: 200,\n        right: 200\n      }\n    });\n  }\n}\nexport function fitStateCenter(feature, map) {\n  if (feature && (feature.geometry || feature._geometry)) {\n    const coordinates = turf.centerOfMass(feature).geometry.coordinates;\n    map.flyTo({\n      center: [coordinates[0], coordinates[1]]\n    });\n  }\n}","map":{"version":3,"names":["React","turf","ReactDOM","ClickablePopup","clickedPopup","hoveredPopup","isDistrictLayerVisible","hoveredId","clickedId","addClickPopup","feature","map","lngLat","type","regionName","properties","NM_UF","placeholder","document","createElement","render","setLngLat","setDOMContent","addTo","trackPointer","setHTML","setFeatureHover","featureID","state","setFeatureState","source","id","hover","setFeatureClick","clickState","stateID","CD_UF","geometry","getSource","undefined","highlightState","remove","isStateLayerVisible","visible","visibility","getLayer","setLayoutProperty","handleCleanStateLayer","cleanStateActions","fitStateBounds","_geometry","minX","minY","maxX","maxY","bbox","fitBounds","padding","top","bottom","left","right","fitStateCenter","coordinates","centerOfMass","flyTo","center"],"sources":["/Users/leonardogomes/Documents/atlas/atlas/src/components/Map/hook/useStateLayer/stateActions.tsx"],"sourcesContent":["import React from 'react';\nimport * as turf from '@turf/turf';\nimport mapboxgl from 'mapbox-gl';\nimport ReactDOM from 'react-dom';\n\nimport { State } from '@customTypes/feature';\n\nimport { ClickablePopup } from '@components/Map/components';\n\nimport { clickedPopup, hoveredPopup } from '../../const';\nimport { isDistrictLayerVisible } from '../useDistrictLayer/districtActions';\nimport { MapActionType } from '@customTypes/mapProps';\n\nlet hoveredId: number | undefined;\nlet clickedId: number | undefined;\n\ntype Feature = State | null;\n\nexport function addClickPopup(feature: Feature, map: mapboxgl.Map, lngLat: mapboxgl.LngLat, type: MapActionType) {\n  const regionName = feature?.properties?.NM_UF;\n  const placeholder = document.createElement('div');\n\n  if (regionName) {\n    if (type === 'Click') {\n      ReactDOM.render(<ClickablePopup regionName={regionName} reference={map} feature={feature} />, placeholder);\n      clickedPopup.setLngLat(lngLat).setDOMContent(placeholder).addTo(map);\n    } else if (type === 'Hover') {\n      hoveredPopup.trackPointer().setHTML(`<h5>${regionName}</h5>`).addTo(map);\n    }\n  }\n}\n\nfunction setFeatureHover(featureID: number, map: mapboxgl.Map, state: boolean) {\n  map.setFeatureState({ source: 'state', id: featureID }, { hover: state });\n}\n\nfunction setFeatureClick(featureID: number, map: mapboxgl.Map, state: boolean) {\n  map.setFeatureState({ source: 'state', id: featureID }, { hover: state });\n}\n\nexport function clickState(feature: Feature, map: mapboxgl.Map) {\n  const stateID = feature?.properties?.CD_UF;\n\n  if (feature && feature.geometry) {\n    if (stateID === clickedId) {\n      return;\n    }\n\n    if (clickedId) {\n      setFeatureClick(clickedId, map, false);\n    }\n\n    if (stateID) {\n      setFeatureClick(stateID, map, true);\n      clickedId = stateID;\n    }\n  } else if (clickedId) {\n    if (map.getSource('state')) {\n      setFeatureClick(clickedId, map, false);\n    }\n    clickedId = undefined;\n  }\n}\n\nexport function highlightState(feature: Feature, map: mapboxgl.Map) {\n  const stateID = feature?.properties?.CD_UF;\n\n  if (feature && feature.geometry) {\n    if (stateID === hoveredId) {\n      return;\n    }\n\n    if (hoveredId) {\n      setFeatureHover(hoveredId, map, false);\n    }\n\n    if (stateID) {\n      setFeatureHover(stateID, map, true);\n      hoveredId = stateID;\n    }\n  } else if (hoveredId) {\n    hoveredPopup.remove();\n\n    if (map.getSource('state')) {\n      setFeatureHover(hoveredId, map, false);\n    }\n    hoveredId = undefined;\n  }\n}\n\nexport function isStateLayerVisible(map: mapboxgl.Map, visible: boolean) {\n  const visibility = visible ? 'visible' : 'none';\n\n  if (map.getLayer('fill-state')) {\n    map.setLayoutProperty('fill-state', 'visibility', visibility);\n  }\n\n  if (map.getLayer('state-borders')) {\n    map.setLayoutProperty('state-borders', 'visibility', visibility);\n  }\n}\n\nexport const handleCleanStateLayer = (map: mapboxgl.Map) => {\n  isStateLayerVisible(map, false);\n  isDistrictLayerVisible(map, true);\n  cleanStateActions();\n};\n\nexport function cleanStateActions() {\n  hoveredPopup.remove();\n  clickedPopup.remove();\n  clickedId = 0;\n  hoveredId = undefined;\n}\n\nexport function fitStateBounds(feature: Feature, map: mapboxgl.Map) {\n  if (feature && (feature.geometry || feature._geometry)) {\n    const [minX, minY, maxX, maxY] = turf.bbox(feature);\n\n    map.fitBounds(\n      [\n        [minX, minY],\n        [maxX, maxY],\n      ],\n      {\n        padding: { top: 100, bottom: 100, left: 200, right: 200 },\n      },\n    );\n  }\n}\n\nexport function fitStateCenter(feature: Feature, map: mapboxgl.Map) {\n  if (feature && (feature.geometry || feature._geometry)) {\n    const coordinates = turf.centerOfMass(feature).geometry.coordinates;\n\n    map.flyTo({\n      center: [coordinates[0], coordinates[1]],\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}