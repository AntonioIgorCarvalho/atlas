{"ast":null,"code":"var _jsxFileName = \"/home/leosilvagomes/Documentos/mit/br-dashboard/src/components/Map/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from \"react\";\nimport mapboxgl from \"mapbox-gl\"; //@ts-ignore\n\nimport geojsonURL from \"../../data/SP-districts-geojson.json\";\nimport { formatPopulationNumber } from \"../../utils/population\";\nimport \"./styles.css\";\nimport * as turf from \"@turf/turf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Map = () => {\n  _s();\n\n  const [map, setMap] = useState();\n  const [hoveredId, setHoveredId] = useState();\n  const mapContainer = useRef();\n  const hoveredPopup = new mapboxgl.Popup({\n    closeButton: false,\n    closeOnClick: false,\n    className: \"floating-popup\"\n  });\n\n  const highlightFeature = feature => {\n    if (feature && feature.geometry && map) {\n      var coordinates = turf.centerOfMass(feature).geometry.coordinates;\n      var regionName = feature.properties.NAME_DIST;\n      var regionPersonsNum = formatPopulationNumber(feature.properties.PERSONS_NUM);\n      hoveredPopup.setLngLat([coordinates[0], coordinates[1]]).setHTML(`<h5>${regionName} - ${regionPersonsNum}</h5>`).addTo(map);\n      map.setFeatureState({\n        source: \"sa2\",\n        id: feature.properties.FEATID\n      }, {\n        hover: true\n      });\n      setHoveredId(feature.properties.FEATID);\n    } else {\n      hoveredPopup.remove();\n      map === null || map === void 0 ? void 0 : map.setFeatureState({\n        source: \"sa2\",\n        id: hoveredId\n      }, {\n        hover: true\n      });\n    }\n  };\n\n  const clearFeatureHighlight = () => {\n    highlightFeature(null);\n  };\n\n  useEffect(() => {\n    mapboxgl.accessToken = \"pk.eyJ1IjoibGVvc2lsdmFnb21lcyIsImEiOiJja2MwdmxhZjAwejdsMnlsbXFsYTV5ZmVsIn0.MyyvEV2SHjCbCkIUeL_9bA\";\n\n    const initializeMap = ({\n      mapContainer\n    }) => {\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/mapbox/dark-v10\",\n        // style: \"mapbox://styles/leosilvagomes/cku2qu4ks2mgz17r100gt7rq6/draft\",\n        center: [-46.7, -23.68],\n        zoom: 9.2\n      });\n      map.on(\"load\", () => {\n        map.dragRotate.disable();\n        map.touchZoomRotate.disableRotation();\n        map.addSource(\"sp\", {\n          type: \"geojson\",\n          //@ts-ignore\n          data: geojsonURL,\n          promoteId: \"SP\"\n        });\n        map.addLayer({\n          id: \"fill-sp\",\n          type: \"fill\",\n          source: \"sp\",\n          paint: {\n            \"fill-color\": {\n              property: \"PERSONS_NUM\",\n              stops: [[0, \"#ADDC91\"], [55000, \"#6CC24A\"], [110000, \"#509E2F\"], [215000, \"#4A7729\"]]\n            },\n            \"fill-opacity\": [\"case\", [\"boolean\", [\"feature-state\", \"click\"], false], 1, [\"boolean\", [\"feature-state\", \"highlight\"], false], 1, [\"boolean\", [\"feature-state\", \"hover\"], false], 1, 0.2]\n          }\n        });\n        map.addLayer({\n          id: \"sp-borders\",\n          type: \"line\",\n          source: \"sp\",\n          paint: {\n            \"line-color\": \"#ffffff\",\n            \"line-width\": 0.8,\n            \"line-opacity\": 1\n          }\n        });\n      });\n      map.on(\"mousemove\", \"fill-sp\", e => {\n        if (e.features.length > 0) {\n          highlightFeature(e.features[0]);\n        }\n      });\n      map.on(\"mouseleave\", \"fill-sp\", clearFeatureHighlight);\n      setMap(map);\n    };\n\n    console.log(map);\n    if (!map) initializeMap({\n      mapContainer\n    });\n  }, [map]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    ref: el => mapContainer.current = el,\n    className: \"map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Map, \"XSCOS6FHPPKO/1pFuGx4IJZW4dI=\");\n\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/home/leosilvagomes/Documentos/mit/br-dashboard/src/components/Map/index.tsx"],"names":["useState","useRef","useEffect","mapboxgl","geojsonURL","formatPopulationNumber","turf","Map","map","setMap","hoveredId","setHoveredId","mapContainer","hoveredPopup","Popup","closeButton","closeOnClick","className","highlightFeature","feature","geometry","coordinates","centerOfMass","regionName","properties","NAME_DIST","regionPersonsNum","PERSONS_NUM","setLngLat","setHTML","addTo","setFeatureState","source","id","FEATID","hover","remove","clearFeatureHighlight","accessToken","initializeMap","container","current","style","center","zoom","on","dragRotate","disable","touchZoomRotate","disableRotation","addSource","type","data","promoteId","addLayer","paint","property","stops","e","features","length","console","log","el"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\n//@ts-ignore\nimport geojsonURL from \"../../data/SP-districts-geojson.json\";\nimport { formatPopulationNumber } from \"../../utils/population\"\nimport \"./styles.css\"\nimport * as turf from \"@turf/turf\";\n\nexport const Map = () => {\n  const [map, setMap] = useState<mapboxgl.Map>();\n  const [hoveredId, setHoveredId] = useState();\n  const mapContainer = useRef<any>();\n  \n  const hoveredPopup = new mapboxgl.Popup({\n    closeButton: false,\n    closeOnClick: false,\n    className: \"floating-popup\",\n  });\n\n  const highlightFeature = (feature : any) => {\n    if (feature && feature.geometry && map) {\n      var coordinates = turf.centerOfMass(feature).geometry.coordinates;\n      var regionName = feature.properties.NAME_DIST;\n      var regionPersonsNum = formatPopulationNumber(feature.properties.PERSONS_NUM);\n      hoveredPopup\n        .setLngLat([coordinates[0], coordinates[1]])\n        .setHTML(`<h5>${regionName} - ${regionPersonsNum}</h5>`)\n        .addTo(map);\n\n      map.setFeatureState(\n        { source: \"sa2\", id: feature.properties.FEATID },\n        { hover: true }\n      );\n\n      setHoveredId(feature.properties.FEATID)\n    } else {\n      hoveredPopup.remove();\n      map?.setFeatureState(\n        { source: \"sa2\", id: hoveredId },\n        { hover: true }\n      );\n    }\n  }\n\n  const clearFeatureHighlight = () => {\n    highlightFeature(null);\n  }\n  \n  useEffect(() => {\n    mapboxgl.accessToken =\n      \"pk.eyJ1IjoibGVvc2lsdmFnb21lcyIsImEiOiJja2MwdmxhZjAwejdsMnlsbXFsYTV5ZmVsIn0.MyyvEV2SHjCbCkIUeL_9bA\";\n      \n    const initializeMap = ({mapContainer}: any) => {\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/mapbox/dark-v10\",\n        // style: \"mapbox://styles/leosilvagomes/cku2qu4ks2mgz17r100gt7rq6/draft\",\n        center: [-46.7,-23.68],\n        zoom: 9.2,\n      });\n\n\n      map.on(\"load\", () => {\n        map.dragRotate.disable();\n        map.touchZoomRotate.disableRotation();\n\n        map.addSource(\"sp\", {\n          type: \"geojson\",\n          //@ts-ignore\n          data: geojsonURL,\n          promoteId: \"SP\",\n        });\n\n\n        map.addLayer({\n          id: \"fill-sp\",\n          type: \"fill\",\n          source: \"sp\",\n          paint: {\n            \"fill-color\":\n            {\n              property: \"PERSONS_NUM\",\n              stops: [\n                [0, \"#ADDC91\"],\n                [55000, \"#6CC24A\"],\n                [110000, \"#509E2F\"],\n                [215000, \"#4A7729\"],\n              ],\n            },\n            \"fill-opacity\": [\n              \"case\",\n              [\"boolean\", [\"feature-state\", \"click\"], false],\n              1,\n              [\"boolean\", [\"feature-state\", \"highlight\"], false],\n              1,\n              [\"boolean\", [\"feature-state\", \"hover\"], false],\n              1,\n              0.2,\n            ],\n          },\n        });\n\n        map.addLayer({\n          id: \"sp-borders\",\n          type: \"line\",\n          source: \"sp\",\n          paint: {\n            \"line-color\": \"#ffffff\",\n            \"line-width\": 0.8,\n            \"line-opacity\": 1,\n          },\n        });\n      });\n\n\n      map.on(\"mousemove\", \"fill-sp\", (e: any) => {\n        if (e.features.length > 0) {\n          highlightFeature(e.features[0]);\n        }\n      });\n\n      map.on(\"mouseleave\", \"fill-sp\", clearFeatureHighlight);\n\n      setMap(map)\n    };\n\n    console.log(map)\n    if (!map) initializeMap({mapContainer});\n  }, [map]);\n\n  return <div id=\"map\" ref={(el) => (mapContainer.current = el)} className=\"map\" />;\n};\n"]},"metadata":{},"sourceType":"module"}