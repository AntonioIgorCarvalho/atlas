{"ast":null,"code":"var _jsxFileName = \"/Users/leonardogomes/Documents/atlas/atlas/src/components/Map/components/ClickablePopup/ClickablePopup.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport { formatPopulationNumber } from '@utils/formatValue';\nimport { fitStateBounds, handleCleanStateLayer } from '../../hook/useStateLayer/stateActions';\nimport * as Styles from './styles';\nimport { useSidebar } from '@store/sidebarContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ClickablePopup = _ref => {\n  _s();\n\n  var _feature$properties;\n\n  let {\n    regionName,\n    reference,\n    feature\n  } = _ref;\n  const {} = useSidebar();\n  const [leo, setLeo] = useState();\n  useEffect(() => {\n    console.log(leo);\n  }, [leo]);\n\n  const handleClickSection = () => {\n    handleCleanStateLayer(reference);\n    fitStateBounds(feature, reference);\n    setLeo('leo');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Styles.Popup, {\n    children: [/*#__PURE__*/_jsxDEV(Styles.ClickableSection, {\n      onClick: handleClickSection,\n      children: [/*#__PURE__*/_jsxDEV(Styles.PopupText, {\n        children: regionName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Styles.IconWrapper, {\n        className: \"iconAction\",\n        children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Styles.PopupContent, {\n      children: /*#__PURE__*/_jsxDEV(Styles.PopupText, {\n        children: [\"Popula\\xE7\\xE3o: \", formatPopulationNumber((_feature$properties = feature.properties) === null || _feature$properties === void 0 ? void 0 : _feature$properties.POPULATION)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ClickablePopup, \"zbSHr4EYkz3AW1jBE4jq8MzI6Vo=\", false, function () {\n  return [useSidebar];\n});\n\n_c = ClickablePopup;\nexport default ClickablePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClickablePopup\");","map":{"version":3,"names":["React","useEffect","useState","ChevronRightIcon","formatPopulationNumber","fitStateBounds","handleCleanStateLayer","Styles","useSidebar","ClickablePopup","regionName","reference","feature","leo","setLeo","console","log","handleClickSection","properties","POPULATION"],"sources":["/Users/leonardogomes/Documents/atlas/atlas/src/components/Map/components/ClickablePopup/ClickablePopup.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\n\nimport { State } from '@customTypes/feature';\n\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\n\nimport { formatPopulationNumber } from '@utils/formatValue';\n\nimport { fitStateBounds, handleCleanStateLayer } from '../../hook/useStateLayer/stateActions';\nimport * as Styles from './styles';\nimport { useSidebar } from '@store/sidebarContext';\ninterface Props {\n  regionName: string;\n  reference: mapboxgl.Map;\n  feature: State;\n}\n\nconst ClickablePopup: React.FC<Props> = ({ regionName, reference, feature }) => {\n  const {} = useSidebar();\n  const [leo, setLeo] = useState<string>();\n\n  useEffect(() => {\n    console.log(leo);\n  }, [leo]);\n\n  const handleClickSection = () => {\n    handleCleanStateLayer(reference);\n    fitStateBounds(feature, reference);\n    setLeo('leo');\n  };\n\n  return (\n    <Styles.Popup>\n      <Styles.ClickableSection onClick={handleClickSection}>\n        <Styles.PopupText>{regionName}</Styles.PopupText>\n        <Styles.IconWrapper className=\"iconAction\">\n          <ChevronRightIcon fontSize=\"small\" />\n        </Styles.IconWrapper>\n      </Styles.ClickableSection>\n\n      <Styles.PopupContent>\n        <Styles.PopupText>População: {formatPopulationNumber(feature.properties?.POPULATION)}</Styles.PopupText>\n      </Styles.PopupContent>\n    </Styles.Popup>\n  );\n};\n\nexport default ClickablePopup;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAKA,OAAOC,gBAAP,MAA6B,kCAA7B;AAEA,SAASC,sBAAT,QAAuC,oBAAvC;AAEA,SAASC,cAAT,EAAyBC,qBAAzB,QAAsD,uCAAtD;AACA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;AACA,SAASC,UAAT,QAA2B,uBAA3B;;;AAOA,MAAMC,cAA+B,GAAG,QAAwC;EAAA;;EAAA;;EAAA,IAAvC;IAAEC,UAAF;IAAcC,SAAd;IAAyBC;EAAzB,CAAuC;EAC9E,MAAM,KAAKJ,UAAU,EAArB;EACA,MAAM,CAACK,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,EAA9B;EAEAD,SAAS,CAAC,MAAM;IACdc,OAAO,CAACC,GAAR,CAAYH,GAAZ;EACD,CAFQ,EAEN,CAACA,GAAD,CAFM,CAAT;;EAIA,MAAMI,kBAAkB,GAAG,MAAM;IAC/BX,qBAAqB,CAACK,SAAD,CAArB;IACAN,cAAc,CAACO,OAAD,EAAUD,SAAV,CAAd;IACAG,MAAM,CAAC,KAAD,CAAN;EACD,CAJD;;EAMA,oBACE,QAAC,MAAD,CAAQ,KAAR;IAAA,wBACE,QAAC,MAAD,CAAQ,gBAAR;MAAyB,OAAO,EAAEG,kBAAlC;MAAA,wBACE,QAAC,MAAD,CAAQ,SAAR;QAAA,UAAmBP;MAAnB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,MAAD,CAAQ,WAAR;QAAoB,SAAS,EAAC,YAA9B;QAAA,uBACE,QAAC,gBAAD;UAAkB,QAAQ,EAAC;QAA3B;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAQE,QAAC,MAAD,CAAQ,YAAR;MAAA,uBACE,QAAC,MAAD,CAAQ,SAAR;QAAA,gCAA8BN,sBAAsB,wBAACQ,OAAO,CAACM,UAAT,wDAAC,oBAAoBC,UAArB,CAApD;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CA5BD;;GAAMV,c;UACOD,U;;;KADPC,c;AA8BN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}