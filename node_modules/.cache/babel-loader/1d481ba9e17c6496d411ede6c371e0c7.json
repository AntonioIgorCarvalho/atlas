{"ast":null,"code":"var _jsxFileName = \"/Users/leonardogomes/Documents/atlas/atlas/src/components/Map/hook/useStateLayer/stateActions.tsx\";\nimport React from 'react';\nimport * as turf from '@turf/turf';\nimport ReactDOM from 'react-dom';\nimport { clickedPopup, hoveredPopup } from '../../const';\nimport { ClickablePopup } from '@components/Map/components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet hoveredId;\nlet clickedId;\nexport function addClickPopup(event, map) {\n  var _feature$properties;\n\n  const coordinates = event.lngLat;\n  const feature = event.features[0];\n  const regionName = feature === null || feature === void 0 ? void 0 : (_feature$properties = feature.properties) === null || _feature$properties === void 0 ? void 0 : _feature$properties.NM_UF;\n  const placeholder = document.createElement('div');\n\n  if (regionName) {\n    ReactDOM.render( /*#__PURE__*/_jsxDEV(ClickablePopup, {\n      regionName: regionName,\n      reference: map,\n      feature: feature\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }, this), placeholder);\n    clickedPopup.setLngLat([coordinates[0], coordinates[1]]).setDOMContent(placeholder).addTo(map);\n  }\n}\n\nfunction addPopup(feature, map, type) {\n  var _feature$properties2;\n\n  const regionName = feature === null || feature === void 0 ? void 0 : (_feature$properties2 = feature.properties) === null || _feature$properties2 === void 0 ? void 0 : _feature$properties2.NM_UF;\n  const coordinates = turf.centerOfMass(feature).geometry.coordinates;\n  const placeholder = document.createElement('div');\n\n  switch (type) {\n    case 'hover':\n      hoveredPopup.trackPointer().setHTML(`<h5>${regionName}</h5>`).addTo(map);\n      break;\n\n    case 'click':\n      if (regionName) {\n        ReactDOM.render( /*#__PURE__*/_jsxDEV(ClickablePopup, {\n          regionName: regionName,\n          reference: map,\n          feature: feature\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), placeholder);\n        clickedPopup.setLngLat([coordinates[0], coordinates[1]]).setDOMContent(placeholder).addTo(map);\n      }\n\n      break;\n  }\n}\n\nfunction setFeatureHover(featureID, map, state) {\n  map.setFeatureState({\n    source: 'state',\n    id: featureID\n  }, {\n    hover: state\n  });\n}\n\nfunction setFeatureClick(featureID, map, state) {\n  map.setFeatureState({\n    source: 'state',\n    id: featureID\n  }, {\n    hover: state\n  });\n}\n\nexport function clickState(feature, map) {\n  var _feature$properties3;\n\n  const stateID = feature === null || feature === void 0 ? void 0 : (_feature$properties3 = feature.properties) === null || _feature$properties3 === void 0 ? void 0 : _feature$properties3.CD_UF;\n\n  if (feature && feature.geometry) {\n    if (stateID === clickedId) {\n      return;\n    }\n\n    addPopup(feature, map, 'click');\n\n    if (clickedId) {\n      setFeatureClick(clickedId, map, false);\n    }\n\n    if (stateID) {\n      setFeatureClick(stateID, map, true);\n      clickedId = stateID;\n    }\n  } else if (clickedId) {\n    if (map.getSource('state')) {\n      setFeatureClick(clickedId, map, false);\n    }\n\n    clickedId = undefined;\n  }\n}\nexport function highlightState(feature, map) {\n  var _feature$properties4;\n\n  const stateID = feature === null || feature === void 0 ? void 0 : (_feature$properties4 = feature.properties) === null || _feature$properties4 === void 0 ? void 0 : _feature$properties4.CD_UF;\n\n  if (feature && feature.geometry) {\n    if (stateID === hoveredId) {\n      return;\n    }\n\n    addPopup(feature, map, 'hover');\n\n    if (hoveredId) {\n      setFeatureHover(hoveredId, map, false);\n    }\n\n    if (stateID) {\n      setFeatureHover(stateID, map, true);\n      hoveredId = stateID;\n    }\n  } else if (hoveredId) {\n    hoveredPopup.remove();\n\n    if (map.getSource('state')) {\n      setFeatureHover(hoveredId, map, false);\n    }\n\n    hoveredId = undefined;\n  }\n}\nexport function isStateLayerVisible(map, visible) {\n  const visibility = visible ? 'visible' : 'none';\n\n  if (map.getLayer('fill-state')) {\n    map.setLayoutProperty('fill-state', 'visibility', visibility);\n  }\n\n  if (map.getLayer('state-borders')) {\n    map.setLayoutProperty('state-borders', 'visibility', visibility);\n  }\n}\nexport function cleanStateActions() {\n  hoveredPopup.remove();\n  clickedPopup.remove();\n  clickedId = 0;\n  hoveredId = undefined;\n}\nexport function fitStateBounds(feature, map) {\n  if (feature && (feature.geometry || feature._geometry)) {\n    const [minX, minY, maxX, maxY] = turf.bbox(feature);\n    map.fitBounds([[minX, minY], [maxX, maxY]], {\n      padding: {\n        top: 100,\n        bottom: 100,\n        left: 200,\n        right: 200\n      }\n    });\n  }\n}\nexport function fitStateCenter(feature, map) {\n  if (feature && (feature.geometry || feature._geometry)) {\n    const [minX, minY, maxX, maxY] = turf.bbox(feature);\n    const coordinates = turf.centerOfMass(feature).geometry.coordinates;\n    map.flyTo({\n      center: [coordinates[0], coordinates[1]]\n    });\n  }\n}","map":{"version":3,"names":["React","turf","ReactDOM","clickedPopup","hoveredPopup","ClickablePopup","hoveredId","clickedId","addClickPopup","event","map","coordinates","lngLat","feature","features","regionName","properties","NM_UF","placeholder","document","createElement","render","setLngLat","setDOMContent","addTo","addPopup","type","centerOfMass","geometry","trackPointer","setHTML","setFeatureHover","featureID","state","setFeatureState","source","id","hover","setFeatureClick","clickState","stateID","CD_UF","getSource","undefined","highlightState","remove","isStateLayerVisible","visible","visibility","getLayer","setLayoutProperty","cleanStateActions","fitStateBounds","_geometry","minX","minY","maxX","maxY","bbox","fitBounds","padding","top","bottom","left","right","fitStateCenter","flyTo","center"],"sources":["/Users/leonardogomes/Documents/atlas/atlas/src/components/Map/hook/useStateLayer/stateActions.tsx"],"sourcesContent":["import React from 'react';\nimport * as turf from '@turf/turf';\nimport mapboxgl from 'mapbox-gl';\nimport ReactDOM from 'react-dom';\n\nimport { State } from '@customTypes/feature';\n\nimport { clickedPopup, hoveredPopup } from '../../const';\nimport { ClickablePopup } from '@components/Map/components';\n\nlet hoveredId: number | undefined;\nlet clickedId: number | undefined;\n\ntype Feature = State | null;\n\nexport function addClickPopup(event: mapboxgl.EventData, map: mapboxgl.Map) {\n  const coordinates = event.lngLat;\n  const feature: Feature = event.features[0];\n\n  const regionName = feature?.properties?.NM_UF;\n  const placeholder = document.createElement('div');\n\n  if (regionName) {\n    ReactDOM.render(<ClickablePopup regionName={regionName} reference={map} feature={feature} />, placeholder);\n\n    clickedPopup.setLngLat([coordinates[0], coordinates[1]]).setDOMContent(placeholder).addTo(map);\n  }\n}\n\nfunction addPopup(feature: Feature, map: mapboxgl.Map, type: string) {\n  const regionName = feature?.properties?.NM_UF;\n  const coordinates = turf.centerOfMass(feature).geometry.coordinates;\n  const placeholder = document.createElement('div');\n\n  switch (type) {\n    case 'hover':\n      hoveredPopup.trackPointer().setHTML(`<h5>${regionName}</h5>`).addTo(map);\n\n      break;\n    case 'click':\n      if (regionName) {\n        ReactDOM.render(<ClickablePopup regionName={regionName} reference={map} feature={feature} />, placeholder);\n\n        clickedPopup.setLngLat([coordinates[0], coordinates[1]]).setDOMContent(placeholder).addTo(map);\n      }\n\n      break;\n  }\n}\n\nfunction setFeatureHover(featureID: number, map: mapboxgl.Map, state: boolean) {\n  map.setFeatureState({ source: 'state', id: featureID }, { hover: state });\n}\n\nfunction setFeatureClick(featureID: number, map: mapboxgl.Map, state: boolean) {\n  map.setFeatureState({ source: 'state', id: featureID }, { hover: state });\n}\n\nexport function clickState(feature: Feature, map: mapboxgl.Map) {\n  const stateID = feature?.properties?.CD_UF;\n\n  if (feature && feature.geometry) {\n    if (stateID === clickedId) {\n      return;\n    }\n    addPopup(feature, map, 'click');\n\n    if (clickedId) {\n      setFeatureClick(clickedId, map, false);\n    }\n\n    if (stateID) {\n      setFeatureClick(stateID, map, true);\n      clickedId = stateID;\n    }\n  } else if (clickedId) {\n    if (map.getSource('state')) {\n      setFeatureClick(clickedId, map, false);\n    }\n    clickedId = undefined;\n  }\n}\n\nexport function highlightState(feature: Feature, map: mapboxgl.Map) {\n  const stateID = feature?.properties?.CD_UF;\n\n  if (feature && feature.geometry) {\n    if (stateID === hoveredId) {\n      return;\n    }\n\n    addPopup(feature, map, 'hover');\n\n    if (hoveredId) {\n      setFeatureHover(hoveredId, map, false);\n    }\n\n    if (stateID) {\n      setFeatureHover(stateID, map, true);\n      hoveredId = stateID;\n    }\n  } else if (hoveredId) {\n    hoveredPopup.remove();\n\n    if (map.getSource('state')) {\n      setFeatureHover(hoveredId, map, false);\n    }\n    hoveredId = undefined;\n  }\n}\n\nexport function isStateLayerVisible(map: mapboxgl.Map, visible: boolean) {\n  const visibility = visible ? 'visible' : 'none';\n\n  if (map.getLayer('fill-state')) {\n    map.setLayoutProperty('fill-state', 'visibility', visibility);\n  }\n\n  if (map.getLayer('state-borders')) {\n    map.setLayoutProperty('state-borders', 'visibility', visibility);\n  }\n}\n\nexport function cleanStateActions() {\n  hoveredPopup.remove();\n  clickedPopup.remove();\n  clickedId = 0;\n  hoveredId = undefined;\n}\n\nexport function fitStateBounds(feature: Feature, map: mapboxgl.Map) {\n  if (feature && (feature.geometry || feature._geometry)) {\n    const [minX, minY, maxX, maxY] = turf.bbox(feature);\n\n    map.fitBounds(\n      [\n        [minX, minY],\n        [maxX, maxY],\n      ],\n      {\n        padding: { top: 100, bottom: 100, left: 200, right: 200 },\n      },\n    );\n  }\n}\n\nexport function fitStateCenter(feature: Feature, map: mapboxgl.Map) {\n  if (feature && (feature.geometry || feature._geometry)) {\n    const [minX, minY, maxX, maxY] = turf.bbox(feature);\n    const coordinates = turf.centerOfMass(feature).geometry.coordinates;\n\n    map.flyTo({\n      center: [coordinates[0], coordinates[1]],\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}