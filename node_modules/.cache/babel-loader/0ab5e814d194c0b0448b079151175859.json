{"ast":null,"code":"var _jsxFileName = \"/Users/leonardogomes/Documents/atlas/atlas/src/components/Header/SearchBar/SearchBar.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDebounce } from 'use-debounce';\nimport { Search, Close } from '@mui/icons-material';\nimport { useSelectedDistrict } from '@store/district/selectedContext';\nimport useSearch from './hook/useSearch';\nimport SearchBarPopper from './SearchBarPopper';\nimport { getFilteredDistricts, getSortedDistricts } from './utils';\nimport * as Styles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = () => {\n  _s();\n\n  const {\n    selected,\n    all\n  } = useSelectedDistrict();\n  const [referenceElement, setReferenceElement] = useState(null);\n  const [districtSearched, setDistrictSearched] = useState(all);\n  const {\n    getComboboxProps,\n    getToggleButtonProps,\n    inputProps,\n    inputValue,\n    cleanSearchBar,\n    setInputValue,\n    highlightedIndex,\n    getMenuProps,\n    getItemProps,\n    isOpen\n  } = useSearch(districtSearched);\n  const [debouncedValue] = useDebounce(inputValue, 500);\n  useEffect(() => {\n    var _selected$properties$;\n\n    setInputValue((_selected$properties$ = selected === null || selected === void 0 ? void 0 : selected.properties.NM_MUN) !== null && _selected$properties$ !== void 0 ? _selected$properties$ : '');\n  }, [selected, setInputValue]);\n  useEffect(() => {\n    const query = debouncedValue.toLowerCase().replace(/\\s+/g, ' ').replace(/(^\\s+|\\s+$)/g, '');\n    const hasQuery = query !== '';\n\n    if (hasQuery) {\n      setDistrictSearched(getSortedDistricts(getFilteredDistricts(all, query)));\n    } else {\n      setDistrictSearched(getSortedDistricts(all));\n    }\n  }, [debouncedValue, all]);\n  const hasInputValue = inputValue === '';\n  const popperActions = {\n    highlightedIndex,\n    isOpen,\n    getItemProps,\n    getMenuProps\n  };\n  return /*#__PURE__*/_jsxDEV(Styles.SearchBarContainer, {\n    ref: setReferenceElement,\n    children: [/*#__PURE__*/_jsxDEV(Styles.SearchBarField, { ...getComboboxProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...inputProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Styles.IconWrapper, {\n        children: hasInputValue ? /*#__PURE__*/_jsxDEV(Search, { ...getToggleButtonProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 28\n        }, this) : /*#__PURE__*/_jsxDEV(Close, {\n          onClick: () => cleanSearchBar()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 69\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBarPopper, {\n      referenceElement: referenceElement,\n      districtSearched: districtSearched,\n      popperActions: popperActions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchBar, \"0yXAu+ITyLYpoBc/5O9YAa3QIgM=\", false, function () {\n  return [useSelectedDistrict, useSearch, useDebounce];\n});\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","useEffect","useDebounce","Search","Close","useSelectedDistrict","useSearch","SearchBarPopper","getFilteredDistricts","getSortedDistricts","Styles","SearchBar","selected","all","referenceElement","setReferenceElement","districtSearched","setDistrictSearched","getComboboxProps","getToggleButtonProps","inputProps","inputValue","cleanSearchBar","setInputValue","highlightedIndex","getMenuProps","getItemProps","isOpen","debouncedValue","properties","NM_MUN","query","toLowerCase","replace","hasQuery","hasInputValue","popperActions"],"sources":["/Users/leonardogomes/Documents/atlas/atlas/src/components/Header/SearchBar/SearchBar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { useDebounce } from 'use-debounce';\n\nimport { Search, Close } from '@mui/icons-material';\n\nimport { useSelectedDistrict } from '@store/district/selectedContext';\nimport { District } from '@customTypes/feature';\n\nimport useSearch from './hook/useSearch';\n\nimport SearchBarPopper, { PopperActionsType } from './SearchBarPopper';\n\nimport { getFilteredDistricts, getSortedDistricts } from './utils';\n\nimport * as Styles from './styles';\n\nconst SearchBar: React.FC = () => {\n  const { selected, all } = useSelectedDistrict();\n\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement | null>(null);\n\n  const [districtSearched, setDistrictSearched] = useState<District[]>(all);\n\n  const {\n    getComboboxProps,\n    getToggleButtonProps,\n    inputProps,\n    inputValue,\n    cleanSearchBar,\n    setInputValue,\n    highlightedIndex,\n    getMenuProps,\n    getItemProps,\n    isOpen,\n  } = useSearch(districtSearched);\n\n  const [debouncedValue] = useDebounce(inputValue, 500);\n\n  useEffect(() => {\n    setInputValue(selected?.properties.NM_MUN ?? '');\n  }, [selected, setInputValue]);\n\n  useEffect(() => {\n    const query = debouncedValue\n      .toLowerCase()\n      .replace(/\\s+/g, ' ')\n      .replace(/(^\\s+|\\s+$)/g, '');\n\n    const hasQuery = query !== '';\n\n    if (hasQuery) {\n      setDistrictSearched(getSortedDistricts(getFilteredDistricts(all, query)));\n    } else {\n      setDistrictSearched(getSortedDistricts(all));\n    }\n  }, [debouncedValue, all]);\n\n  const hasInputValue = inputValue === '';\n\n  const popperActions: PopperActionsType = {\n    highlightedIndex,\n    isOpen,\n    getItemProps,\n    getMenuProps,\n  };\n\n  return (\n    <Styles.SearchBarContainer ref={setReferenceElement}>\n      <Styles.SearchBarField {...getComboboxProps()}>\n        <input {...inputProps} />\n\n        <Styles.IconWrapper>\n          {hasInputValue ? <Search {...getToggleButtonProps()} /> : <Close onClick={() => cleanSearchBar()} />}\n        </Styles.IconWrapper>\n      </Styles.SearchBarField>\n\n      <SearchBarPopper\n        referenceElement={referenceElement}\n        districtSearched={districtSearched}\n        popperActions={popperActions}\n      />\n    </Styles.SearchBarContainer>\n  );\n};\n\nexport default SearchBar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}