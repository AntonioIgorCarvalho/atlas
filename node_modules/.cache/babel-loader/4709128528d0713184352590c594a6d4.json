{"ast":null,"code":"var _jsxFileName = \"/Users/leonardogomes/Documents/atlas/atlas/src/components/ComparisonMode/GridMode/GridContent/GridContent.tsx\";\nimport React from 'react';\nimport Collapsible from '@components/Collapsible';\nimport MetricDetails from '@components/MetricDetails';\nimport * as Styles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GridContent = _ref => {\n  let {\n    section,\n    comparison\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Collapsible, {\n    title: section.title,\n    children: /*#__PURE__*/_jsxDEV(Styles.GridContainer, {\n      children: section.content.map((content, id) => /*#__PURE__*/_jsxDEV(Styles.Grid, {\n        children: [/*#__PURE__*/_jsxDEV(Styles.Title, {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: content.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Styles.GridItem, {\n          children: comparison.map((district, idx) => /*#__PURE__*/_jsxDEV(Styles.ComparisonLabel, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              title: district === null || district === void 0 ? void 0 : district.properties.NM_MUN,\n              children: district === null || district === void 0 ? void 0 : district.properties.NM_MUN\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(MetricDetails, {\n              district: district,\n              metric: content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = GridContent;\nexport default GridContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"GridContent\");","map":{"version":3,"names":["React","Collapsible","MetricDetails","Styles","GridContent","section","comparison","title","content","map","id","district","idx","properties","NM_MUN"],"sources":["/Users/leonardogomes/Documents/atlas/atlas/src/components/ComparisonMode/GridMode/GridContent/GridContent.tsx"],"sourcesContent":["import React from 'react';\n\nimport Collapsible from '@components/Collapsible';\n\nimport MetricDetails from '@components/MetricDetails';\n\nimport { DistrictSectionType, DistrictContentType } from '@config/districtProps';\n\nimport { District } from '@customTypes/feature';\n\nimport * as Styles from './styles';\n\ninterface Props {\n  section: DistrictSectionType;\n  comparison: Array<District>;\n}\n\nconst GridContent: React.FC<Props> = ({ section, comparison }) => {\n  return (\n    <Collapsible title={section.title}>\n      <Styles.GridContainer>\n        {section.content.map((content: DistrictContentType, id) => (\n          <Styles.Grid key={id}>\n            <Styles.Title>\n              <h2>{content.title}</h2>\n            </Styles.Title>\n            <Styles.GridItem>\n              {comparison.map((district, idx) => (\n                <Styles.ComparisonLabel key={idx}>\n                  <label title={district?.properties.NM_MUN}>{district?.properties.NM_MUN}</label>\n                  <MetricDetails district={district} metric={content} />\n                </Styles.ComparisonLabel>\n              ))}\n            </Styles.GridItem>\n          </Styles.Grid>\n        ))}\n      </Styles.GridContainer>\n    </Collapsible>\n  );\n};\n\nexport default GridContent;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA,OAAOC,aAAP,MAA0B,2BAA1B;AAMA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;;;AAOA,MAAMC,WAA4B,GAAG,QAA6B;EAAA,IAA5B;IAAEC,OAAF;IAAWC;EAAX,CAA4B;EAChE,oBACE,QAAC,WAAD;IAAa,KAAK,EAAED,OAAO,CAACE,KAA5B;IAAA,uBACE,QAAC,MAAD,CAAQ,aAAR;MAAA,UACGF,OAAO,CAACG,OAAR,CAAgBC,GAAhB,CAAoB,CAACD,OAAD,EAA+BE,EAA/B,kBACnB,QAAC,MAAD,CAAQ,IAAR;QAAA,wBACE,QAAC,MAAD,CAAQ,KAAR;UAAA,uBACE;YAAA,UAAKF,OAAO,CAACD;UAAb;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADF,eAIE,QAAC,MAAD,CAAQ,QAAR;UAAA,UACGD,UAAU,CAACG,GAAX,CAAe,CAACE,QAAD,EAAWC,GAAX,kBACd,QAAC,MAAD,CAAQ,eAAR;YAAA,wBACE;cAAO,KAAK,EAAED,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEE,UAAV,CAAqBC,MAAnC;cAAA,UAA4CH,QAA5C,aAA4CA,QAA5C,uBAA4CA,QAAQ,CAAEE,UAAV,CAAqBC;YAAjE;cAAA;cAAA;cAAA;YAAA,QADF,eAEE,QAAC,aAAD;cAAe,QAAQ,EAAEH,QAAzB;cAAmC,MAAM,EAAEH;YAA3C;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA,GAA6BI,GAA7B;YAAA;YAAA;YAAA;UAAA,QADD;QADH;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA,GAAkBF,EAAlB;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CAtBD;;KAAMN,W;AAwBN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}