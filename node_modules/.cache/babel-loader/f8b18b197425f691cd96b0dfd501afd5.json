{"ast":null,"code":"import _objectSpread from\"/Users/leonardogomes/Documents/atlas/atlas/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/leonardogomes/Documents/atlas/atlas/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{useDebounce}from'use-debounce';import{Search,Close}from'@mui/icons-material';import{useSelectedDistrict}from'@store/district/selectedContext';import useSearch from'./hook/useSearch';import SearchBarPopper from'./SearchBarPopper';import{getFilteredDistricts,getSortedDistricts}from'./utils';import*as Styles from'./styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SearchBar=function SearchBar(){var _useSelectedDistrict=useSelectedDistrict(),selected=_useSelectedDistrict.selected,all=_useSelectedDistrict.all;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),referenceElement=_useState2[0],setReferenceElement=_useState2[1];var _useState3=useState(all),_useState4=_slicedToArray(_useState3,2),districtSearched=_useState4[0],setDistrictSearched=_useState4[1];var _useSearch=useSearch(districtSearched),getComboboxProps=_useSearch.getComboboxProps,getToggleButtonProps=_useSearch.getToggleButtonProps,inputProps=_useSearch.inputProps,inputValue=_useSearch.inputValue,cleanSearchBar=_useSearch.cleanSearchBar,setInputValue=_useSearch.setInputValue,highlightedIndex=_useSearch.highlightedIndex,getMenuProps=_useSearch.getMenuProps,getItemProps=_useSearch.getItemProps,isOpen=_useSearch.isOpen;var _useDebounce=useDebounce(inputValue,500),_useDebounce2=_slicedToArray(_useDebounce,1),debouncedValue=_useDebounce2[0];useEffect(function(){var _selected$properties$;setInputValue((_selected$properties$=selected===null||selected===void 0?void 0:selected.properties.NM_MUN)!==null&&_selected$properties$!==void 0?_selected$properties$:'');},[selected,setInputValue]);useEffect(function(){var query=debouncedValue.toLowerCase().replace(/\\s+/g,' ').replace(/(^\\s+|\\s+$)/g,'');var hasQuery=query!=='';if(hasQuery){setDistrictSearched(getSortedDistricts(getFilteredDistricts(all,query)));}else{setDistrictSearched(getSortedDistricts(all));}},[debouncedValue,all]);var hasInputValue=inputValue==='';var popperActions={highlightedIndex:highlightedIndex,isOpen:isOpen,getItemProps:getItemProps,getMenuProps:getMenuProps};return/*#__PURE__*/_jsxs(Styles.SearchBarContainer,{ref:setReferenceElement,children:[/*#__PURE__*/_jsxs(Styles.SearchBarField,_objectSpread(_objectSpread({},getComboboxProps()),{},{children:[/*#__PURE__*/_jsx(\"input\",_objectSpread({},inputProps)),/*#__PURE__*/_jsx(Styles.IconWrapper,{children:hasInputValue?/*#__PURE__*/_jsx(Search,_objectSpread({},getToggleButtonProps())):/*#__PURE__*/_jsx(Close,{onClick:function onClick(){return cleanSearchBar();}})})]})),/*#__PURE__*/_jsx(SearchBarPopper,{referenceElement:referenceElement,districtSearched:districtSearched,popperActions:popperActions})]});};export default SearchBar;","map":{"version":3,"names":["React","useState","useEffect","useDebounce","Search","Close","useSelectedDistrict","useSearch","SearchBarPopper","getFilteredDistricts","getSortedDistricts","Styles","SearchBar","selected","all","referenceElement","setReferenceElement","districtSearched","setDistrictSearched","getComboboxProps","getToggleButtonProps","inputProps","inputValue","cleanSearchBar","setInputValue","highlightedIndex","getMenuProps","getItemProps","isOpen","debouncedValue","properties","NM_MUN","query","toLowerCase","replace","hasQuery","hasInputValue","popperActions"],"sources":["/Users/leonardogomes/Documents/atlas/atlas/src/components/Header/SearchBar/SearchBar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { useDebounce } from 'use-debounce';\n\nimport { Search, Close } from '@mui/icons-material';\n\nimport { useSelectedDistrict } from '@store/district/selectedContext';\nimport { District } from '@customTypes/feature';\n\nimport useSearch from './hook/useSearch';\n\nimport SearchBarPopper, { PopperActionsType } from './SearchBarPopper';\n\nimport { getFilteredDistricts, getSortedDistricts } from './utils';\n\nimport * as Styles from './styles';\n\nconst SearchBar: React.FC = () => {\n  const { selected, all } = useSelectedDistrict();\n\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement | null>(null);\n\n  const [districtSearched, setDistrictSearched] = useState<District[]>(all);\n\n  const {\n    getComboboxProps,\n    getToggleButtonProps,\n    inputProps,\n    inputValue,\n    cleanSearchBar,\n    setInputValue,\n    highlightedIndex,\n    getMenuProps,\n    getItemProps,\n    isOpen,\n  } = useSearch(districtSearched);\n\n  const [debouncedValue] = useDebounce(inputValue, 500);\n\n  useEffect(() => {\n    setInputValue(selected?.properties.NM_MUN ?? '');\n  }, [selected, setInputValue]);\n\n  useEffect(() => {\n    const query = debouncedValue\n      .toLowerCase()\n      .replace(/\\s+/g, ' ')\n      .replace(/(^\\s+|\\s+$)/g, '');\n\n    const hasQuery = query !== '';\n\n    if (hasQuery) {\n      setDistrictSearched(getSortedDistricts(getFilteredDistricts(all, query)));\n    } else {\n      setDistrictSearched(getSortedDistricts(all));\n    }\n  }, [debouncedValue, all]);\n\n  const hasInputValue = inputValue === '';\n\n  const popperActions: PopperActionsType = {\n    highlightedIndex,\n    isOpen,\n    getItemProps,\n    getMenuProps,\n  };\n\n  return (\n    <Styles.SearchBarContainer ref={setReferenceElement}>\n      <Styles.SearchBarField {...getComboboxProps()}>\n        <input {...inputProps} />\n\n        <Styles.IconWrapper>\n          {hasInputValue ? <Search {...getToggleButtonProps()} /> : <Close onClick={() => cleanSearchBar()} />}\n        </Styles.IconWrapper>\n      </Styles.SearchBarField>\n\n      <SearchBarPopper\n        referenceElement={referenceElement}\n        districtSearched={districtSearched}\n        popperActions={popperActions}\n      />\n    </Styles.SearchBarContainer>\n  );\n};\n\nexport default SearchBar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}