{"ast":null,"code":"import _slicedToArray from\"/Users/leonardogomes/Documents/atlas/atlas/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import*as turf from'@turf/turf';import ReactDOM from'react-dom';import{clickedPopup,hoveredPopup}from'../../const';import{ClickablePopup}from'@components/Map/components';import{jsx as _jsx}from\"react/jsx-runtime\";var hoveredId;var clickedId;function addPopup(feature,map,type){var _feature$properties;var regionName=feature===null||feature===void 0?void 0:(_feature$properties=feature.properties)===null||_feature$properties===void 0?void 0:_feature$properties.NM_UF;var coordinates=turf.centerOfMass(feature).geometry.coordinates;var placeholder=document.createElement('div');switch(type){case'hover':hoveredPopup.trackPointer().setHTML(\"<h5>\".concat(regionName,\"</h5>\")).addTo(map);break;case'click':if(regionName){ReactDOM.render(/*#__PURE__*/_jsx(ClickablePopup,{regionName:regionName,reference:map,feature:feature}),placeholder);clickedPopup.setLngLat([coordinates[0],coordinates[1]]).setDOMContent(placeholder).addTo(map);}break;}}function setFeatureHover(featureID,map,state){map.setFeatureState({source:'state',id:featureID},{hover:state});}function setFeatureClick(featureID,map,state){map.setFeatureState({source:'state',id:featureID},{hover:state});}export function clickState(feature,map){var _feature$properties2;var stateID=feature===null||feature===void 0?void 0:(_feature$properties2=feature.properties)===null||_feature$properties2===void 0?void 0:_feature$properties2.CD_UF;if(feature&&feature.geometry){if(stateID===clickedId){return;}addPopup(feature,map,'click');if(clickedId){setFeatureClick(clickedId,map,false);}if(stateID){setFeatureClick(stateID,map,true);clickedId=stateID;}}else if(clickedId){if(map.getSource('state')){setFeatureClick(clickedId,map,false);}clickedId=undefined;}}export function highlightState(feature,map){var _feature$properties3;var stateID=feature===null||feature===void 0?void 0:(_feature$properties3=feature.properties)===null||_feature$properties3===void 0?void 0:_feature$properties3.CD_UF;if(feature&&feature.geometry){if(stateID===hoveredId){return;}addPopup(feature,map,'hover');if(hoveredId){setFeatureHover(hoveredId,map,false);}if(stateID){setFeatureHover(stateID,map,true);hoveredId=stateID;}}else if(hoveredId){hoveredPopup.remove();if(map.getSource('state')){setFeatureHover(hoveredId,map,false);}hoveredId=undefined;}}export function isStateLayerVisible(map,visible){var visibility=visible?'visible':'none';if(map.getLayer('fill-state')){map.setLayoutProperty('fill-state','visibility',visibility);}if(map.getLayer('state-borders')){map.setLayoutProperty('state-borders','visibility',visibility);}}export function cleanStateActions(){hoveredPopup.remove();clickedPopup.remove();clickedId=0;hoveredId=undefined;}export function fitStateBounds(feature,map){if(feature&&(feature.geometry||feature._geometry)){var _turf$bbox=turf.bbox(feature),_turf$bbox2=_slicedToArray(_turf$bbox,4),minX=_turf$bbox2[0],minY=_turf$bbox2[1],maxX=_turf$bbox2[2],maxY=_turf$bbox2[3];map.fitBounds([[minX,minY],[maxX,maxY]],{padding:{top:100,bottom:100,left:200,right:200}});}}export function fitStateCenter(feature,map){if(feature&&(feature.geometry||feature._geometry)){var _turf$bbox3=turf.bbox(feature),_turf$bbox4=_slicedToArray(_turf$bbox3,4),minX=_turf$bbox4[0],minY=_turf$bbox4[1],maxX=_turf$bbox4[2],maxY=_turf$bbox4[3];var coordinates=turf.centerOfMass(feature).geometry.coordinates;map.flyTo({center:[coordinates[0],coordinates[1]],zoom:3.4});}}","map":{"version":3,"names":["React","turf","ReactDOM","clickedPopup","hoveredPopup","ClickablePopup","hoveredId","clickedId","addPopup","feature","map","type","regionName","properties","NM_UF","coordinates","centerOfMass","geometry","placeholder","document","createElement","trackPointer","setHTML","addTo","render","setLngLat","setDOMContent","setFeatureHover","featureID","state","setFeatureState","source","id","hover","setFeatureClick","clickState","stateID","CD_UF","getSource","undefined","highlightState","remove","isStateLayerVisible","visible","visibility","getLayer","setLayoutProperty","cleanStateActions","fitStateBounds","_geometry","bbox","minX","minY","maxX","maxY","fitBounds","padding","top","bottom","left","right","fitStateCenter","flyTo","center","zoom"],"sources":["/Users/leonardogomes/Documents/atlas/atlas/src/components/Map/hook/useStateLayer/stateActions.tsx"],"sourcesContent":["import React from 'react';\nimport * as turf from '@turf/turf';\nimport mapboxgl from 'mapbox-gl';\nimport ReactDOM from 'react-dom';\n\nimport { State } from '@customTypes/feature';\n\nimport { clickedPopup, hoveredPopup } from '../../const';\nimport { ClickablePopup } from '@components/Map/components';\n\nlet hoveredId: number | undefined;\nlet clickedId: number | undefined;\n\ntype Feature = State | null;\n\nfunction addPopup(feature: Feature, map: mapboxgl.Map, type: string) {\n  const regionName = feature?.properties?.NM_UF;\n  const coordinates = turf.centerOfMass(feature).geometry.coordinates;\n  const placeholder = document.createElement('div');\n\n  switch (type) {\n    case 'hover':\n      hoveredPopup.trackPointer().setHTML(`<h5>${regionName}</h5>`).addTo(map);\n\n      break;\n    case 'click':\n      if (regionName) {\n        ReactDOM.render(<ClickablePopup regionName={regionName} reference={map} feature={feature} />, placeholder);\n\n        clickedPopup.setLngLat([coordinates[0], coordinates[1]]).setDOMContent(placeholder).addTo(map);\n      }\n\n      break;\n  }\n}\n\nfunction setFeatureHover(featureID: number, map: mapboxgl.Map, state: boolean) {\n  map.setFeatureState({ source: 'state', id: featureID }, { hover: state });\n}\n\nfunction setFeatureClick(featureID: number, map: mapboxgl.Map, state: boolean) {\n  map.setFeatureState({ source: 'state', id: featureID }, { hover: state });\n}\n\nexport function clickState(feature: Feature, map: mapboxgl.Map) {\n  const stateID = feature?.properties?.CD_UF;\n\n  if (feature && feature.geometry) {\n    if (stateID === clickedId) {\n      return;\n    }\n    addPopup(feature, map, 'click');\n\n    if (clickedId) {\n      setFeatureClick(clickedId, map, false);\n    }\n\n    if (stateID) {\n      setFeatureClick(stateID, map, true);\n      clickedId = stateID;\n    }\n  } else if (clickedId) {\n    if (map.getSource('state')) {\n      setFeatureClick(clickedId, map, false);\n    }\n    clickedId = undefined;\n  }\n}\n\nexport function highlightState(feature: Feature, map: mapboxgl.Map) {\n  const stateID = feature?.properties?.CD_UF;\n\n  if (feature && feature.geometry) {\n    if (stateID === hoveredId) {\n      return;\n    }\n\n    addPopup(feature, map, 'hover');\n\n    if (hoveredId) {\n      setFeatureHover(hoveredId, map, false);\n    }\n\n    if (stateID) {\n      setFeatureHover(stateID, map, true);\n      hoveredId = stateID;\n    }\n  } else if (hoveredId) {\n    hoveredPopup.remove();\n\n    if (map.getSource('state')) {\n      setFeatureHover(hoveredId, map, false);\n    }\n    hoveredId = undefined;\n  }\n}\n\nexport function isStateLayerVisible(map: mapboxgl.Map, visible: boolean) {\n  const visibility = visible ? 'visible' : 'none';\n\n  if (map.getLayer('fill-state')) {\n    map.setLayoutProperty('fill-state', 'visibility', visibility);\n  }\n\n  if (map.getLayer('state-borders')) {\n    map.setLayoutProperty('state-borders', 'visibility', visibility);\n  }\n}\n\nexport function cleanStateActions() {\n  hoveredPopup.remove();\n  clickedPopup.remove();\n  clickedId = 0;\n  hoveredId = undefined;\n}\n\nexport function fitStateBounds(feature: Feature, map: mapboxgl.Map) {\n  if (feature && (feature.geometry || feature._geometry)) {\n    const [minX, minY, maxX, maxY] = turf.bbox(feature);\n\n    map.fitBounds(\n      [\n        [minX, minY],\n        [maxX, maxY],\n      ],\n      {\n        padding: { top: 100, bottom: 100, left: 200, right: 200 },\n      },\n    );\n  }\n}\n\nexport function fitStateCenter(feature: Feature, map: mapboxgl.Map) {\n  if (feature && (feature.geometry || feature._geometry)) {\n    const [minX, minY, maxX, maxY] = turf.bbox(feature);\n    const coordinates = turf.centerOfMass(feature).geometry.coordinates;\n\n    map.flyTo({\n      center: [coordinates[0], coordinates[1]],\n      zoom: 3.4,\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}