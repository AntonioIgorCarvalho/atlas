{"ast":null,"code":"import _slicedToArray from\"/Users/leonardogomes/Documents/atlas/atlas/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from'react';import{useLocation,useHistory}from'react-router';import{useComparison}from'@store/comparisonContext';import{useSelectedDistrict}from'@store/district/selectedContext';import{useSidebar}from'@store/sidebarContext';var useMain=function useMain(){var _useComparison=useComparison(),comparison=_useComparison.comparison,addComparisonDistrict=_useComparison.addComparisonDistrict;var _useSidebar=useSidebar(),setIsSidebarOpen=_useSidebar.setIsSidebarOpen;var _useSelectedDistrict=useSelectedDistrict(),all=_useSelectedDistrict.all;var location=useLocation();var history=useHistory();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isComparisonModeEnabled=_useState2[0],setIsComparisonModeEnabled=_useState2[1];useEffect(function(){if(comparison.length===0&&location.pathname.startsWith('/comparison/')){var pathIds=location.pathname.replace('/comparison/','');if(pathIds){var ids=pathIds.split('+');var featuresFromUrl=all.filter(function(ft){return ids.includes(ft.properties['CD_MUN'].toString());});setIsSidebarOpen(true);addComparisonDistrict(featuresFromUrl);}else{history.replace('/');}}},[location,history,comparison]);useEffect(function(){if(location.pathname.startsWith('/comparison/')&&all.length!==0){var ids=comparison.map(function(feature){return feature.properties.CD_MUN;});var newPath='/comparison/'+ids.join('+');if(location.pathname!==newPath){history.replace(newPath);}}},[comparison,location,history]);useEffect(function(){setIsComparisonModeEnabled(location.pathname.startsWith('/comparison'));},[location]);return{isComparisonModeEnabled:isComparisonModeEnabled};};export default useMain;","map":{"version":3,"names":["useEffect","useState","useLocation","useHistory","useComparison","useSelectedDistrict","useSidebar","useMain","comparison","addComparisonDistrict","setIsSidebarOpen","all","location","history","isComparisonModeEnabled","setIsComparisonModeEnabled","length","pathname","startsWith","pathIds","replace","ids","split","featuresFromUrl","filter","ft","includes","properties","toString","map","feature","CD_MUN","newPath","join"],"sources":["/Users/leonardogomes/Documents/atlas/atlas/src/pages/Main/hook/useMain.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useLocation, useHistory } from 'react-router';\n\nimport { useComparison } from '@store/comparisonContext';\nimport { useSelectedDistrict } from '@store/district/selectedContext';\nimport { useSidebar } from '@store/sidebarContext';\n\nconst useMain = () => {\n  const { comparison, addComparisonDistrict } = useComparison();\n  const { setIsSidebarOpen } = useSidebar();\n  const { all } = useSelectedDistrict();\n\n  const location = useLocation();\n  const history = useHistory();\n\n  const [isComparisonModeEnabled, setIsComparisonModeEnabled] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (comparison.length === 0 && location.pathname.startsWith('/comparison/')) {\n      const pathIds = location.pathname.replace('/comparison/', '');\n      if (pathIds) {\n        const ids = pathIds.split('+');\n        const featuresFromUrl = all.filter((ft: any) => ids.includes(ft.properties['CD_MUN'].toString()));\n        setIsSidebarOpen(true);\n        addComparisonDistrict(featuresFromUrl);\n      } else {\n        history.replace('/');\n      }\n    }\n  }, [location, history, comparison]);\n\n  useEffect(() => {\n    if (location.pathname.startsWith('/comparison/') && all.length !== 0) {\n      const ids = comparison.map((feature: any) => feature.properties.CD_MUN);\n      const newPath = '/comparison/' + ids.join('+');\n      if (location.pathname !== newPath) {\n        history.replace(newPath);\n      }\n    }\n  }, [comparison, location, history]);\n\n  useEffect(() => {\n    setIsComparisonModeEnabled(location.pathname.startsWith('/comparison'));\n  }, [location]);\n\n  return {\n    isComparisonModeEnabled,\n  };\n};\n\nexport default useMain;\n"],"mappings":"gIAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,WAAT,CAAsBC,UAAtB,KAAwC,cAAxC,CAEA,OAASC,aAAT,KAA8B,0BAA9B,CACA,OAASC,mBAAT,KAAoC,iCAApC,CACA,OAASC,UAAT,KAA2B,uBAA3B,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpB,mBAA8CH,aAAa,EAA3D,CAAQI,UAAR,gBAAQA,UAAR,CAAoBC,qBAApB,gBAAoBA,qBAApB,CACA,gBAA6BH,UAAU,EAAvC,CAAQI,gBAAR,aAAQA,gBAAR,CACA,yBAAgBL,mBAAmB,EAAnC,CAAQM,GAAR,sBAAQA,GAAR,CAEA,GAAMC,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CACA,GAAMW,CAAAA,OAAO,CAAGV,UAAU,EAA1B,CAEA,cAA8DF,QAAQ,CAAU,KAAV,CAAtE,wCAAOa,uBAAP,eAAgCC,0BAAhC,eAEAf,SAAS,CAAC,UAAM,CACd,GAAIQ,UAAU,CAACQ,MAAX,GAAsB,CAAtB,EAA2BJ,QAAQ,CAACK,QAAT,CAAkBC,UAAlB,CAA6B,cAA7B,CAA/B,CAA6E,CAC3E,GAAMC,CAAAA,OAAO,CAAGP,QAAQ,CAACK,QAAT,CAAkBG,OAAlB,CAA0B,cAA1B,CAA0C,EAA1C,CAAhB,CACA,GAAID,OAAJ,CAAa,CACX,GAAME,CAAAA,GAAG,CAAGF,OAAO,CAACG,KAAR,CAAc,GAAd,CAAZ,CACA,GAAMC,CAAAA,eAAe,CAAGZ,GAAG,CAACa,MAAJ,CAAW,SAACC,EAAD,QAAaJ,CAAAA,GAAG,CAACK,QAAJ,CAAaD,EAAE,CAACE,UAAH,CAAc,QAAd,EAAwBC,QAAxB,EAAb,CAAb,EAAX,CAAxB,CACAlB,gBAAgB,CAAC,IAAD,CAAhB,CACAD,qBAAqB,CAACc,eAAD,CAArB,CACD,CALD,IAKO,CACLV,OAAO,CAACO,OAAR,CAAgB,GAAhB,EACD,CACF,CACF,CAZQ,CAYN,CAACR,QAAD,CAAWC,OAAX,CAAoBL,UAApB,CAZM,CAAT,CAcAR,SAAS,CAAC,UAAM,CACd,GAAIY,QAAQ,CAACK,QAAT,CAAkBC,UAAlB,CAA6B,cAA7B,GAAgDP,GAAG,CAACK,MAAJ,GAAe,CAAnE,CAAsE,CACpE,GAAMK,CAAAA,GAAG,CAAGb,UAAU,CAACqB,GAAX,CAAe,SAACC,OAAD,QAAkBA,CAAAA,OAAO,CAACH,UAAR,CAAmBI,MAArC,EAAf,CAAZ,CACA,GAAMC,CAAAA,OAAO,CAAG,eAAiBX,GAAG,CAACY,IAAJ,CAAS,GAAT,CAAjC,CACA,GAAIrB,QAAQ,CAACK,QAAT,GAAsBe,OAA1B,CAAmC,CACjCnB,OAAO,CAACO,OAAR,CAAgBY,OAAhB,EACD,CACF,CACF,CARQ,CAQN,CAACxB,UAAD,CAAaI,QAAb,CAAuBC,OAAvB,CARM,CAAT,CAUAb,SAAS,CAAC,UAAM,CACde,0BAA0B,CAACH,QAAQ,CAACK,QAAT,CAAkBC,UAAlB,CAA6B,aAA7B,CAAD,CAA1B,CACD,CAFQ,CAEN,CAACN,QAAD,CAFM,CAAT,CAIA,MAAO,CACLE,uBAAuB,CAAvBA,uBADK,CAAP,CAGD,CAzCD,CA2CA,cAAeP,CAAAA,OAAf"},"metadata":{},"sourceType":"module"}