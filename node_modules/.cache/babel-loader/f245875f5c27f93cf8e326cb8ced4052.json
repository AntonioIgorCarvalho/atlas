{"ast":null,"code":"var _jsxFileName = \"/Users/leonardogomes/Documents/atlas/atlas/src/components/ComparisonMode/TableMode/TableContent/TableContent.tsx\";\nimport React from 'react';\nimport Collapsible from '@components/Collapsible';\nimport MetricDetails from '@components/MetricDetails';\nimport * as Styles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TableContent = _ref => {\n  let {\n    section,\n    comparison\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Collapsible, {\n    title: section.title,\n    children: section.content.map((content, id) => /*#__PURE__*/_jsxDEV(Styles.Table, {\n      lineTableNumber: id,\n      children: [/*#__PURE__*/_jsxDEV(Styles.ColumnTitle, {\n        children: content.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), comparison.map((region, idx) => /*#__PURE__*/_jsxDEV(Styles.Column, {\n        gridColumnNumber: idx + 2,\n        children: /*#__PURE__*/_jsxDEV(MetricDetails, {\n          district: region,\n          metric: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this))]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TableContent;\nexport default TableContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableContent\");","map":{"version":3,"names":["React","Collapsible","MetricDetails","Styles","TableContent","section","comparison","title","content","map","id","description","region","idx"],"sources":["/Users/leonardogomes/Documents/atlas/atlas/src/components/ComparisonMode/TableMode/TableContent/TableContent.tsx"],"sourcesContent":["import React from 'react';\n\nimport Collapsible from '@components/Collapsible';\n\nimport MetricDetails from '@components/MetricDetails';\n\nimport { MapPropsContentType, MapPropsSectionType } from '@customTypes/mapProps';\n\nimport { Feature } from '@customTypes/feature';\n\nimport * as Styles from './styles';\n\ninterface Props {\n  section: MapPropsSectionType;\n  comparison: Array<Feature>;\n}\n\nconst TableContent: React.FC<Props> = ({ section, comparison }) => {\n  return (\n    <Collapsible title={section.title}>\n      {section.content.map((content: MapPropsContentType, id) => (\n        <Styles.Table lineTableNumber={id} key={id}>\n          <Styles.ColumnTitle>{content.description}</Styles.ColumnTitle>\n          {comparison.map((region, idx) => (\n            <Styles.Column gridColumnNumber={idx + 2} key={idx}>\n              <MetricDetails district={region} metric={content} />\n            </Styles.Column>\n          ))}\n        </Styles.Table>\n      ))}\n    </Collapsible>\n  );\n};\n\nexport default TableContent;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA,OAAOC,aAAP,MAA0B,2BAA1B;AAMA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;;;AAOA,MAAMC,YAA6B,GAAG,QAA6B;EAAA,IAA5B;IAAEC,OAAF;IAAWC;EAAX,CAA4B;EACjE,oBACE,QAAC,WAAD;IAAa,KAAK,EAAED,OAAO,CAACE,KAA5B;IAAA,UACGF,OAAO,CAACG,OAAR,CAAgBC,GAAhB,CAAoB,CAACD,OAAD,EAA+BE,EAA/B,kBACnB,QAAC,MAAD,CAAQ,KAAR;MAAc,eAAe,EAAEA,EAA/B;MAAA,wBACE,QAAC,MAAD,CAAQ,WAAR;QAAA,UAAqBF,OAAO,CAACG;MAA7B;QAAA;QAAA;QAAA;MAAA,QADF,EAEGL,UAAU,CAACG,GAAX,CAAe,CAACG,MAAD,EAASC,GAAT,kBACd,QAAC,MAAD,CAAQ,MAAR;QAAe,gBAAgB,EAAEA,GAAG,GAAG,CAAvC;QAAA,uBACE,QAAC,aAAD;UAAe,QAAQ,EAAED,MAAzB;UAAiC,MAAM,EAAEJ;QAAzC;UAAA;UAAA;UAAA;QAAA;MADF,GAA+CK,GAA/C;QAAA;QAAA;QAAA;MAAA,QADD,CAFH;IAAA,GAAwCH,EAAxC;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CAfD;;KAAMN,Y;AAiBN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}