{"ast":null,"code":"var _jsxFileName = \"/Users/leonardogomes/Documents/atlas/atlas/src/store/state/selectedContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useState } from 'react';\nimport geojsonBR from '@data/BR_UF_2020.json';\nimport { DEFAULT_VALUE } from '@hook/useFeature';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst selectedStatesContext = /*#__PURE__*/createContext(DEFAULT_VALUE);\nexport function SelectedStatesProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //@ts-ignore\n  const allStates = geojsonBR['features'];\n  const [all] = useState(allStates);\n  const [selected, setSelected] = useState(null);\n  return /*#__PURE__*/_jsxDEV(selectedStatesContext.Provider, {\n    value: {\n      all,\n      selected,\n      setSelected\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SelectedStatesProvider, \"UMsmeCkSOg669D/GqRFMGBjJh3Q=\");\n\n_c = SelectedStatesProvider;\nexport function useSelectedState() {\n  _s2();\n\n  const context = useContext(selectedStatesContext);\n  const state = context;\n  return state;\n}\n\n_s2(useSelectedState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectedStatesProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","geojsonBR","DEFAULT_VALUE","selectedStatesContext","SelectedStatesProvider","children","allStates","all","selected","setSelected","useSelectedState","context","state"],"sources":["/Users/leonardogomes/Documents/atlas/atlas/src/store/state/selectedContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nimport { State } from '@customTypes/feature';\n\nimport geojsonBR from '@data/BR_UF_2020.json';\n\nimport { DEFAULT_VALUE } from '@hook/useFeature';\n\ninterface StateActions {\n  all: Array<State>;\n  selected: State | null;\n  setSelected: React.Dispatch<React.SetStateAction<any>>;\n}\n\nconst selectedStatesContext = createContext<StateActions>(DEFAULT_VALUE);\n\nexport function SelectedStatesProvider({ children }: any) {\n  //@ts-ignore\n  const allStates: Array<State> = geojsonBR['features'];\n\n  const [all] = useState(allStates);\n  const [selected, setSelected] = useState(null);\n\n  return (\n    <selectedStatesContext.Provider\n      value={{\n        all,\n        selected,\n        setSelected,\n      }}\n    >\n      {children}\n    </selectedStatesContext.Provider>\n  );\n}\n\nexport function useSelectedState() {\n  const context = useContext(selectedStatesContext);\n  const state = context;\n  return state;\n}\n"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,QAA2D,OAA3D;AAIA,OAAOC,SAAP,MAAsB,uBAAtB;AAEA,SAASC,aAAT,QAA8B,kBAA9B;;AAQA,MAAMC,qBAAqB,gBAAGL,aAAa,CAAeI,aAAf,CAA3C;AAEA,OAAO,SAASE,sBAAT,OAAmD;EAAA;;EAAA,IAAnB;IAAEC;EAAF,CAAmB;EACxD;EACA,MAAMC,SAAuB,GAAGL,SAAS,CAAC,UAAD,CAAzC;EAEA,MAAM,CAACM,GAAD,IAAQP,QAAQ,CAACM,SAAD,CAAtB;EACA,MAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAxC;EAEA,oBACE,QAAC,qBAAD,CAAuB,QAAvB;IACE,KAAK,EAAE;MACLO,GADK;MAELC,QAFK;MAGLC;IAHK,CADT;IAAA,UAOGJ;EAPH;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GAlBeD,sB;;KAAAA,sB;AAoBhB,OAAO,SAASM,gBAAT,GAA4B;EAAA;;EACjC,MAAMC,OAAO,GAAGZ,UAAU,CAACI,qBAAD,CAA1B;EACA,MAAMS,KAAK,GAAGD,OAAd;EACA,OAAOC,KAAP;AACD;;IAJeF,gB"},"metadata":{},"sourceType":"module"}