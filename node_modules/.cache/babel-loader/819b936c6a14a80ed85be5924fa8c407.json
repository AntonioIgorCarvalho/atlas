{"ast":null,"code":"var _jsxFileName = \"/Users/leonardogomes/Documents/atlas/atlas/src/components/Sidebar/RegionDetails/DataSection.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Collapsible from '@components/Collapsible';\nimport MetricDetails from '@components/MetricDetails';\nimport { useSelectedDistrict } from '@store/district/selectedContext';\nimport { useComparison } from '@store/comparisonContext';\nimport { Tooltip } from '@mui/material';\nimport * as Styles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DataSection = _ref => {\n  _s();\n\n  let {\n    title,\n    content\n  } = _ref;\n  const {\n    selected\n  } = useSelectedDistrict();\n  const {\n    comparison\n  } = useComparison();\n  const isSelectedOnComparison = comparison.some(region => region.properties.CD_MUN === (selected === null || selected === void 0 ? void 0 : selected.properties.CD_MUN));\n  const hasSelectedDistrict = Boolean(selected);\n  return /*#__PURE__*/_jsxDEV(Collapsible, {\n    title: title,\n    children: content.map((props, id) => /*#__PURE__*/_jsxDEV(Styles.PropsWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n        title: props.description,\n        arrow: true,\n        children: /*#__PURE__*/_jsxDEV(Styles.PropsTitle, {\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), comparison.map(district => /*#__PURE__*/_jsxDEV(Styles.ValueContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: district.properties.NM_MUN\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(MetricDetails, {\n          district: district,\n          metric: props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)]\n      }, district.properties.CD_MUN, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)), !isSelectedOnComparison && hasSelectedDistrict && /*#__PURE__*/_jsxDEV(Styles.ValueContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: selected === null || selected === void 0 ? void 0 : selected.properties.NM_MUN\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(MetricDetails, {\n          district: selected,\n          metric: props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DataSection, \"AdcjYrkvVi0Ebc0aaT63WsyKOVw=\", false, function () {\n  return [useSelectedDistrict, useComparison];\n});\n\n_c = DataSection;\nexport default DataSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataSection\");","map":{"version":3,"names":["React","Collapsible","MetricDetails","useSelectedDistrict","useComparison","Tooltip","Styles","DataSection","title","content","selected","comparison","isSelectedOnComparison","some","region","properties","CD_MUN","hasSelectedDistrict","Boolean","map","props","id","description","district","NM_MUN"],"sources":["/Users/leonardogomes/Documents/atlas/atlas/src/components/Sidebar/RegionDetails/DataSection.tsx"],"sourcesContent":["import React from 'react';\n\nimport Collapsible from '@components/Collapsible';\n\nimport MetricDetails from '@components/MetricDetails';\n\nimport { useSelectedDistrict } from '@store/district/selectedContext';\nimport { useComparison } from '@store/comparisonContext';\n\nimport { DistrictSectionType, DistrictContentType } from '@config/districtProps';\n\nimport { Tooltip } from '@mui/material';\n\nimport * as Styles from './styles';\n\nconst DataSection: React.FC<DistrictSectionType> = ({ title, content }) => {\n  const { selected } = useSelectedDistrict();\n  const { comparison } = useComparison();\n\n  const isSelectedOnComparison = comparison.some((region) => region.properties.CD_MUN === selected?.properties.CD_MUN);\n\n  const hasSelectedDistrict = Boolean(selected);\n\n  return (\n    <Collapsible title={title}>\n      {content.map((props: DistrictContentType, id) => (\n        <Styles.PropsWrapper key={id}>\n          <Tooltip title={props.description} arrow>\n            <Styles.PropsTitle>{props.title}</Styles.PropsTitle>\n          </Tooltip>\n\n          {comparison.map((district) => (\n            <Styles.ValueContent key={district.properties.CD_MUN}>\n              <p>{district.properties.NM_MUN}</p>\n              <MetricDetails district={district} metric={props} />\n            </Styles.ValueContent>\n          ))}\n\n          {!isSelectedOnComparison && hasSelectedDistrict && (\n            <Styles.ValueContent>\n              <p>{selected?.properties.NM_MUN}</p>\n              <MetricDetails district={selected} metric={props} />\n            </Styles.ValueContent>\n          )}\n        </Styles.PropsWrapper>\n      ))}\n    </Collapsible>\n  );\n};\n\nexport default DataSection;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA,OAAOC,aAAP,MAA0B,2BAA1B;AAEA,SAASC,mBAAT,QAAoC,iCAApC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAIA,SAASC,OAAT,QAAwB,eAAxB;AAEA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;;;AAEA,MAAMC,WAA0C,GAAG,QAAwB;EAAA;;EAAA,IAAvB;IAAEC,KAAF;IAASC;EAAT,CAAuB;EACzE,MAAM;IAAEC;EAAF,IAAeP,mBAAmB,EAAxC;EACA,MAAM;IAAEQ;EAAF,IAAiBP,aAAa,EAApC;EAEA,MAAMQ,sBAAsB,GAAGD,UAAU,CAACE,IAAX,CAAiBC,MAAD,IAAYA,MAAM,CAACC,UAAP,CAAkBC,MAAlB,MAA6BN,QAA7B,aAA6BA,QAA7B,uBAA6BA,QAAQ,CAAEK,UAAV,CAAqBC,MAAlD,CAA5B,CAA/B;EAEA,MAAMC,mBAAmB,GAAGC,OAAO,CAACR,QAAD,CAAnC;EAEA,oBACE,QAAC,WAAD;IAAa,KAAK,EAAEF,KAApB;IAAA,UACGC,OAAO,CAACU,GAAR,CAAY,CAACC,KAAD,EAA6BC,EAA7B,kBACX,QAAC,MAAD,CAAQ,YAAR;MAAA,wBACE,QAAC,OAAD;QAAS,KAAK,EAAED,KAAK,CAACE,WAAtB;QAAmC,KAAK,MAAxC;QAAA,uBACE,QAAC,MAAD,CAAQ,UAAR;UAAA,UAAoBF,KAAK,CAACZ;QAA1B;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,EAKGG,UAAU,CAACQ,GAAX,CAAgBI,QAAD,iBACd,QAAC,MAAD,CAAQ,YAAR;QAAA,wBACE;UAAA,UAAIA,QAAQ,CAACR,UAAT,CAAoBS;QAAxB;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,aAAD;UAAe,QAAQ,EAAED,QAAzB;UAAmC,MAAM,EAAEH;QAA3C;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA,GAA0BG,QAAQ,CAACR,UAAT,CAAoBC,MAA9C;QAAA;QAAA;QAAA;MAAA,QADD,CALH,EAYG,CAACJ,sBAAD,IAA2BK,mBAA3B,iBACC,QAAC,MAAD,CAAQ,YAAR;QAAA,wBACE;UAAA,UAAIP,QAAJ,aAAIA,QAAJ,uBAAIA,QAAQ,CAAEK,UAAV,CAAqBS;QAAzB;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,aAAD;UAAe,QAAQ,EAAEd,QAAzB;UAAmC,MAAM,EAAEU;QAA3C;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAbJ;IAAA,GAA0BC,EAA1B;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD,CAjCD;;GAAMd,W;UACiBJ,mB,EACEC,a;;;KAFnBG,W;AAmCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}