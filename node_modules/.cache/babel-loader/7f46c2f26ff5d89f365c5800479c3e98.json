{"ast":null,"code":"import _slicedToArray from\"/Users/leonardogomes/Documents/atlas/atlas/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from'react';import{useHighlightedDistrict}from'@store/district/highlightedContext';import{useSelectedDistrict}from'@store/district/selectedContext';import{useSelectedState}from'@store/state/selectedContext';import{useSidebar}from'@store/sidebarContext';import{highlightDistrict,clickDistrict,cleanDistrictActions,fitDistrictBounds,addClickPopup,addHoverPopup}from'./districtActions';import{RSColors}from'./const';import{lineOpacity,lineWidth,fillOpacity}from'../../const';import geojsonGO from'@data/states/RS_Municipios_2020.json';import{fitStateBounds}from'../useStateLayer/stateActions';import{findState}from'@components/Map/actions';var useDistrictLayer=function useDistrictLayer(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),districtReference=_useState2[0],setDistrictReference=_useState2[1];var _useHighlightedDistri=useHighlightedDistrict(),setHighlightedDistrict=_useHighlightedDistri.setHighlighted,highlightedDistrict=_useHighlightedDistri.highlighted;var _useSelectedDistrict=useSelectedDistrict(),setSelectedDistrict=_useSelectedDistrict.setSelected,selectedDistrict=_useSelectedDistrict.selected;var _useSelectedState=useSelectedState(),selectedState=_useSelectedState.selected,setSelectedState=_useSelectedState.setSelected,allState=_useSelectedState.all;var _useSidebar=useSidebar(),setIsSidebarOpen=_useSidebar.setIsSidebarOpen;function initLayers(reference){reference.on('load',function(){reference.dragRotate.disable();reference.touchZoomRotate.disableRotation();reference.addSource('district',{type:'geojson',//@ts-ignore\ndata:geojsonGO,//@ts-ignore\npromoteId:'CD_MUN'});reference.addLayer({id:'fill-district',type:'fill',source:'district',layout:{visibility:'none'},paint:{'fill-color':{property:'POPULATION',stops:RSColors},//@ts-ignore\n'fill-opacity':fillOpacity}});reference.addLayer({id:'district-borders',type:'line',source:'district',layout:{visibility:'none'},paint:{'line-color':'#ffffff',//@ts-ignore\n'line-width':lineWidth,//@ts-ignore\n'line-opacity':lineOpacity}});});}function initActions(reference){reference.on('click','fill-district',function(e){if(e.features.length>0){setSelectedDistrict(e.features[0]);}addClickPopup(e,reference);});reference.on('mousemove','fill-district',function(e){if(e.features.length>0){setHighlightedDistrict(e.features[0]);}addHoverPopup(e,reference);});reference.on('mouseleave','fill-district',function(){setHighlightedDistrict(null);});}useEffect(function(){if(districtReference){initLayers(districtReference);initActions(districtReference);}},[districtReference]);useEffect(function(){if(districtReference){highlightDistrict(highlightedDistrict,districtReference);}},[highlightedDistrict]);useEffect(function(){if(districtReference&&selectedDistrict!==null){clickDistrict(selectedDistrict,districtReference);fitDistrictBounds(selectedDistrict,districtReference);setIsSidebarOpen(true);if(selectedState===null){var state=findState(allState,selectedDistrict.properties.SIGLA_UF);setSelectedState(state);}}else if(districtReference){clickDistrict(null,districtReference);fitStateBounds(selectedState,districtReference);cleanDistrictActions();}},[selectedDistrict]);return{districtReference:districtReference,setDistrictReference:setDistrictReference};};export default useDistrictLayer;","map":{"version":3,"names":["useEffect","useState","useHighlightedDistrict","useSelectedDistrict","useSelectedState","useSidebar","highlightDistrict","clickDistrict","cleanDistrictActions","fitDistrictBounds","addClickPopup","addHoverPopup","RSColors","lineOpacity","lineWidth","fillOpacity","geojsonGO","fitStateBounds","findState","useDistrictLayer","districtReference","setDistrictReference","setHighlightedDistrict","setHighlighted","highlightedDistrict","highlighted","setSelectedDistrict","setSelected","selectedDistrict","selected","selectedState","setSelectedState","allState","all","setIsSidebarOpen","initLayers","reference","on","dragRotate","disable","touchZoomRotate","disableRotation","addSource","type","data","promoteId","addLayer","id","source","layout","visibility","paint","property","stops","initActions","e","features","length","state","properties","SIGLA_UF"],"sources":["/Users/leonardogomes/Documents/atlas/atlas/src/components/Map/hook/useDistrictLayer/useDistrictLayer.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport mapboxgl from 'mapbox-gl';\n\nimport { useHighlightedDistrict } from '@store/district/highlightedContext';\nimport { useSelectedDistrict } from '@store/district/selectedContext';\nimport { useSelectedState } from '@store/state/selectedContext';\nimport { useSidebar } from '@store/sidebarContext';\n\nimport {\n  highlightDistrict,\n  clickDistrict,\n  cleanDistrictActions,\n  fitDistrictBounds,\n  addClickPopup,\n  addHoverPopup,\n} from './districtActions';\n\nimport { RSColors } from './const';\nimport { lineOpacity, lineWidth, fillOpacity } from '../../const';\n\nimport geojsonGO from '@data/states/RS_Municipios_2020.json';\nimport { fitStateBounds } from '../useStateLayer/stateActions';\nimport { findState } from '@components/Map/actions';\n\nconst useDistrictLayer = () => {\n  const [districtReference, setDistrictReference] = useState<mapboxgl.Map>();\n\n  const { setHighlighted: setHighlightedDistrict, highlighted: highlightedDistrict } = useHighlightedDistrict();\n  const { setSelected: setSelectedDistrict, selected: selectedDistrict } = useSelectedDistrict();\n\n  const { selected: selectedState, setSelected: setSelectedState, all: allState } = useSelectedState();\n\n  const { setIsSidebarOpen } = useSidebar();\n\n  function initLayers(reference: mapboxgl.Map) {\n    reference.on('load', () => {\n      reference.dragRotate.disable();\n      reference.touchZoomRotate.disableRotation();\n\n      reference.addSource('district', {\n        type: 'geojson',\n        //@ts-ignore\n        data: geojsonGO,\n        //@ts-ignore\n        promoteId: 'CD_MUN',\n      });\n\n      reference.addLayer({\n        id: 'fill-district',\n        type: 'fill',\n        source: 'district',\n        layout: {\n          visibility: 'none',\n        },\n        paint: {\n          'fill-color': {\n            property: 'POPULATION',\n            stops: RSColors,\n          },\n          //@ts-ignore\n          'fill-opacity': fillOpacity,\n        },\n      });\n\n      reference.addLayer({\n        id: 'district-borders',\n        type: 'line',\n        source: 'district',\n        layout: {\n          visibility: 'none',\n        },\n        paint: {\n          'line-color': '#ffffff',\n          //@ts-ignore\n          'line-width': lineWidth,\n          //@ts-ignore\n          'line-opacity': lineOpacity,\n        },\n      });\n    });\n  }\n\n  function initActions(reference: mapboxgl.Map) {\n    reference.on('click', 'fill-district', (e: mapboxgl.EventData) => {\n      if (e.features.length > 0) {\n        setSelectedDistrict(e.features[0]);\n      }\n\n      addClickPopup(e, reference);\n    });\n\n    reference.on('mousemove', 'fill-district', (e: mapboxgl.EventData) => {\n      if (e.features.length > 0) {\n        setHighlightedDistrict(e.features[0]);\n      }\n\n      addHoverPopup(e, reference);\n    });\n\n    reference.on('mouseleave', 'fill-district', () => {\n      setHighlightedDistrict(null);\n    });\n  }\n\n  useEffect(() => {\n    if (districtReference) {\n      initLayers(districtReference);\n      initActions(districtReference);\n    }\n  }, [districtReference]);\n\n  useEffect(() => {\n    if (districtReference) {\n      highlightDistrict(highlightedDistrict, districtReference);\n    }\n  }, [highlightedDistrict]);\n\n  useEffect(() => {\n    if (districtReference && selectedDistrict !== null) {\n      clickDistrict(selectedDistrict, districtReference);\n\n      fitDistrictBounds(selectedDistrict, districtReference);\n\n      setIsSidebarOpen(true);\n\n      if (selectedState === null) {\n        const state = findState(allState, selectedDistrict.properties.SIGLA_UF);\n\n        setSelectedState(state);\n      }\n    } else if (districtReference) {\n      clickDistrict(null, districtReference);\n\n      fitStateBounds(selectedState, districtReference);\n\n      cleanDistrictActions();\n    }\n  }, [selectedDistrict]);\n\n  return { districtReference, setDistrictReference };\n};\n\nexport default useDistrictLayer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}