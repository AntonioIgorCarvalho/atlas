{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useHighlightedDistrict } from '@store/district/highlightedContext';\nimport { useSelectedDistrict } from '@store/district/selectedContext';\nimport { useSelectedState } from '@store/state/selectedContext';\nimport { useSidebar } from '@store/sidebarContext';\nimport { highlightDistrict, clickDistrict, cleanDistrictActions, fitDistrictBounds, addPopup } from './districtActions';\nimport { RSColors } from './const';\nimport { lineOpacity, lineWidth, fillOpacity } from '../../const';\nimport geojsonGO from '@data/states/RS_Municipios_2020.json';\nimport { fitStateBounds, handleCleanStateLayer } from '../useStateLayer/stateActions';\nimport { findState } from '@components/Map/actions';\n\nconst useDistrictLayer = () => {\n  _s();\n\n  const [districtReference, setDistrictReference] = useState();\n  const [latLng, setLatLng] = useState();\n  const {\n    setHighlighted: setHighlightedDistrict,\n    highlighted: highlightedDistrict\n  } = useHighlightedDistrict();\n  const {\n    setSelected: setSelectedDistrict,\n    selected: selectedDistrict\n  } = useSelectedDistrict();\n  const {\n    selected: selectedState,\n    setSelected: setSelectedState,\n    all: allState\n  } = useSelectedState();\n  const {\n    setIsSidebarOpen\n  } = useSidebar();\n\n  function initLayers(reference) {\n    reference.on('load', () => {\n      reference.dragRotate.disable();\n      reference.touchZoomRotate.disableRotation();\n      reference.addSource('district', {\n        type: 'geojson',\n        //@ts-ignore\n        data: geojsonGO,\n        //@ts-ignore\n        promoteId: 'CD_MUN'\n      });\n      reference.addLayer({\n        id: 'fill-district',\n        type: 'fill',\n        source: 'district',\n        layout: {\n          visibility: 'none'\n        },\n        paint: {\n          'fill-color': {\n            property: 'POPULATION',\n            stops: RSColors\n          },\n          //@ts-ignore\n          'fill-opacity': fillOpacity\n        }\n      });\n      reference.addLayer({\n        id: 'district-borders',\n        type: 'line',\n        source: 'district',\n        layout: {\n          visibility: 'none'\n        },\n        paint: {\n          'line-color': '#ffffff',\n          //@ts-ignore\n          'line-width': lineWidth,\n          //@ts-ignore\n          'line-opacity': lineOpacity\n        }\n      });\n    });\n  }\n\n  function initActions(reference) {\n    reference.on('click', 'fill-district', e => {\n      if (e.features.length > 0) {\n        setSelectedDistrict(e.features[0]);\n        setLatLng(e.lngLat);\n      }\n    });\n    reference.on('mousemove', 'fill-district', e => {\n      if (e.features.length > 0) {\n        setHighlightedDistrict(e.features[0]);\n        setLatLng(e.lngLat);\n      }\n    });\n    reference.on('mouseleave', 'fill-district', () => {\n      setHighlightedDistrict(null);\n    });\n  }\n\n  useEffect(() => {\n    if (districtReference) {\n      initLayers(districtReference);\n      initActions(districtReference);\n    }\n  }, [districtReference]);\n  useEffect(() => {\n    if (districtReference) {\n      highlightDistrict(highlightedDistrict, districtReference);\n      if (latLng) addPopup(highlightedDistrict, districtReference, latLng, 'Hover');\n    }\n  }, [highlightedDistrict]);\n  useEffect(() => {\n    if (districtReference && selectedDistrict !== null) {\n      handleCleanStateLayer(districtReference);\n      clickDistrict(selectedDistrict, districtReference);\n      fitDistrictBounds(selectedDistrict, districtReference);\n      setIsSidebarOpen(true);\n      if (latLng) addPopup(highlightedDistrict, districtReference, latLng, 'Hover');\n\n      if (selectedState === null) {\n        const state = findState(allState, selectedDistrict.properties.SIGLA_UF);\n        setSelectedState(state);\n      }\n    } else if (districtReference) {\n      clickDistrict(null, districtReference);\n      cleanDistrictActions();\n      fitStateBounds(selectedState, districtReference);\n    }\n  }, [selectedDistrict]);\n  return {\n    districtReference,\n    setDistrictReference\n  };\n};\n\n_s(useDistrictLayer, \"SAqNg/7nnrkicxtX0Q5Eo77AvHk=\", false, function () {\n  return [useHighlightedDistrict, useSelectedDistrict, useSelectedState, useSidebar];\n});\n\nexport default useDistrictLayer;","map":{"version":3,"names":["useEffect","useState","useHighlightedDistrict","useSelectedDistrict","useSelectedState","useSidebar","highlightDistrict","clickDistrict","cleanDistrictActions","fitDistrictBounds","addPopup","RSColors","lineOpacity","lineWidth","fillOpacity","geojsonGO","fitStateBounds","handleCleanStateLayer","findState","useDistrictLayer","districtReference","setDistrictReference","latLng","setLatLng","setHighlighted","setHighlightedDistrict","highlighted","highlightedDistrict","setSelected","setSelectedDistrict","selected","selectedDistrict","selectedState","setSelectedState","all","allState","setIsSidebarOpen","initLayers","reference","on","dragRotate","disable","touchZoomRotate","disableRotation","addSource","type","data","promoteId","addLayer","id","source","layout","visibility","paint","property","stops","initActions","e","features","length","lngLat","state","properties","SIGLA_UF"],"sources":["/Users/leonardogomes/Documents/atlas/atlas/src/components/Map/hook/useDistrictLayer/useDistrictLayer.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport mapboxgl from 'mapbox-gl';\n\nimport { useHighlightedDistrict } from '@store/district/highlightedContext';\nimport { useSelectedDistrict } from '@store/district/selectedContext';\nimport { useSelectedState } from '@store/state/selectedContext';\nimport { useSidebar } from '@store/sidebarContext';\n\nimport { highlightDistrict, clickDistrict, cleanDistrictActions, fitDistrictBounds, addPopup } from './districtActions';\n\nimport { RSColors } from './const';\nimport { lineOpacity, lineWidth, fillOpacity } from '../../const';\n\nimport geojsonGO from '@data/states/RS_Municipios_2020.json';\nimport { fitStateBounds, handleCleanStateLayer } from '../useStateLayer/stateActions';\nimport { findState } from '@components/Map/actions';\n\nconst useDistrictLayer = () => {\n  const [districtReference, setDistrictReference] = useState<mapboxgl.Map>();\n  const [latLng, setLatLng] = useState<mapboxgl.LngLat>();\n\n  const { setHighlighted: setHighlightedDistrict, highlighted: highlightedDistrict } = useHighlightedDistrict();\n  const { setSelected: setSelectedDistrict, selected: selectedDistrict } = useSelectedDistrict();\n\n  const { selected: selectedState, setSelected: setSelectedState, all: allState } = useSelectedState();\n\n  const { setIsSidebarOpen } = useSidebar();\n\n  function initLayers(reference: mapboxgl.Map) {\n    reference.on('load', () => {\n      reference.dragRotate.disable();\n      reference.touchZoomRotate.disableRotation();\n\n      reference.addSource('district', {\n        type: 'geojson',\n        //@ts-ignore\n        data: geojsonGO,\n        //@ts-ignore\n        promoteId: 'CD_MUN',\n      });\n\n      reference.addLayer({\n        id: 'fill-district',\n        type: 'fill',\n        source: 'district',\n        layout: {\n          visibility: 'none',\n        },\n        paint: {\n          'fill-color': {\n            property: 'POPULATION',\n            stops: RSColors,\n          },\n          //@ts-ignore\n          'fill-opacity': fillOpacity,\n        },\n      });\n\n      reference.addLayer({\n        id: 'district-borders',\n        type: 'line',\n        source: 'district',\n        layout: {\n          visibility: 'none',\n        },\n        paint: {\n          'line-color': '#ffffff',\n          //@ts-ignore\n          'line-width': lineWidth,\n          //@ts-ignore\n          'line-opacity': lineOpacity,\n        },\n      });\n    });\n  }\n\n  function initActions(reference: mapboxgl.Map) {\n    reference.on('click', 'fill-district', (e: mapboxgl.EventData) => {\n      if (e.features.length > 0) {\n        setSelectedDistrict(e.features[0]);\n        setLatLng(e.lngLat);\n      }\n    });\n\n    reference.on('mousemove', 'fill-district', (e: mapboxgl.EventData) => {\n      if (e.features.length > 0) {\n        setHighlightedDistrict(e.features[0]);\n        setLatLng(e.lngLat);\n      }\n    });\n\n    reference.on('mouseleave', 'fill-district', () => {\n      setHighlightedDistrict(null);\n    });\n  }\n\n  useEffect(() => {\n    if (districtReference) {\n      initLayers(districtReference);\n      initActions(districtReference);\n    }\n  }, [districtReference]);\n\n  useEffect(() => {\n    if (districtReference) {\n      highlightDistrict(highlightedDistrict, districtReference);\n      if (latLng) addPopup(highlightedDistrict, districtReference, latLng, 'Hover');\n    }\n  }, [highlightedDistrict]);\n\n  useEffect(() => {\n    if (districtReference && selectedDistrict !== null) {\n      handleCleanStateLayer(districtReference);\n\n      clickDistrict(selectedDistrict, districtReference);\n      fitDistrictBounds(selectedDistrict, districtReference);\n\n      setIsSidebarOpen(true);\n\n      if (latLng) addPopup(highlightedDistrict, districtReference, latLng, 'Hover');\n      if (selectedState === null) {\n        const state = findState(allState, selectedDistrict.properties.SIGLA_UF);\n\n        setSelectedState(state);\n      }\n    } else if (districtReference) {\n      clickDistrict(null, districtReference);\n      cleanDistrictActions();\n\n      fitStateBounds(selectedState, districtReference);\n    }\n  }, [selectedDistrict]);\n\n  return { districtReference, setDistrictReference };\n};\n\nexport default useDistrictLayer;\n"],"mappings":";;AAAA,SAAgBA,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAIA,SAASC,sBAAT,QAAuC,oCAAvC;AACA,SAASC,mBAAT,QAAoC,iCAApC;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,UAAT,QAA2B,uBAA3B;AAEA,SAASC,iBAAT,EAA4BC,aAA5B,EAA2CC,oBAA3C,EAAiEC,iBAAjE,EAAoFC,QAApF,QAAoG,mBAApG;AAEA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,WAAjC,QAAoD,aAApD;AAEA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAASC,cAAT,EAAyBC,qBAAzB,QAAsD,+BAAtD;AACA,SAASC,SAAT,QAA0B,yBAA1B;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;EAAA;;EAC7B,MAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CpB,QAAQ,EAA1D;EACA,MAAM,CAACqB,MAAD,EAASC,SAAT,IAAsBtB,QAAQ,EAApC;EAEA,MAAM;IAAEuB,cAAc,EAAEC,sBAAlB;IAA0CC,WAAW,EAAEC;EAAvD,IAA+EzB,sBAAsB,EAA3G;EACA,MAAM;IAAE0B,WAAW,EAAEC,mBAAf;IAAoCC,QAAQ,EAAEC;EAA9C,IAAmE5B,mBAAmB,EAA5F;EAEA,MAAM;IAAE2B,QAAQ,EAAEE,aAAZ;IAA2BJ,WAAW,EAAEK,gBAAxC;IAA0DC,GAAG,EAAEC;EAA/D,IAA4E/B,gBAAgB,EAAlG;EAEA,MAAM;IAAEgC;EAAF,IAAuB/B,UAAU,EAAvC;;EAEA,SAASgC,UAAT,CAAoBC,SAApB,EAA6C;IAC3CA,SAAS,CAACC,EAAV,CAAa,MAAb,EAAqB,MAAM;MACzBD,SAAS,CAACE,UAAV,CAAqBC,OAArB;MACAH,SAAS,CAACI,eAAV,CAA0BC,eAA1B;MAEAL,SAAS,CAACM,SAAV,CAAoB,UAApB,EAAgC;QAC9BC,IAAI,EAAE,SADwB;QAE9B;QACAC,IAAI,EAAE/B,SAHwB;QAI9B;QACAgC,SAAS,EAAE;MALmB,CAAhC;MAQAT,SAAS,CAACU,QAAV,CAAmB;QACjBC,EAAE,EAAE,eADa;QAEjBJ,IAAI,EAAE,MAFW;QAGjBK,MAAM,EAAE,UAHS;QAIjBC,MAAM,EAAE;UACNC,UAAU,EAAE;QADN,CAJS;QAOjBC,KAAK,EAAE;UACL,cAAc;YACZC,QAAQ,EAAE,YADE;YAEZC,KAAK,EAAE5C;UAFK,CADT;UAKL;UACA,gBAAgBG;QANX;MAPU,CAAnB;MAiBAwB,SAAS,CAACU,QAAV,CAAmB;QACjBC,EAAE,EAAE,kBADa;QAEjBJ,IAAI,EAAE,MAFW;QAGjBK,MAAM,EAAE,UAHS;QAIjBC,MAAM,EAAE;UACNC,UAAU,EAAE;QADN,CAJS;QAOjBC,KAAK,EAAE;UACL,cAAc,SADT;UAEL;UACA,cAAcxC,SAHT;UAIL;UACA,gBAAgBD;QALX;MAPU,CAAnB;IAeD,CA5CD;EA6CD;;EAED,SAAS4C,WAAT,CAAqBlB,SAArB,EAA8C;IAC5CA,SAAS,CAACC,EAAV,CAAa,OAAb,EAAsB,eAAtB,EAAwCkB,CAAD,IAA2B;MAChE,IAAIA,CAAC,CAACC,QAAF,CAAWC,MAAX,GAAoB,CAAxB,EAA2B;QACzB9B,mBAAmB,CAAC4B,CAAC,CAACC,QAAF,CAAW,CAAX,CAAD,CAAnB;QACAnC,SAAS,CAACkC,CAAC,CAACG,MAAH,CAAT;MACD;IACF,CALD;IAOAtB,SAAS,CAACC,EAAV,CAAa,WAAb,EAA0B,eAA1B,EAA4CkB,CAAD,IAA2B;MACpE,IAAIA,CAAC,CAACC,QAAF,CAAWC,MAAX,GAAoB,CAAxB,EAA2B;QACzBlC,sBAAsB,CAACgC,CAAC,CAACC,QAAF,CAAW,CAAX,CAAD,CAAtB;QACAnC,SAAS,CAACkC,CAAC,CAACG,MAAH,CAAT;MACD;IACF,CALD;IAOAtB,SAAS,CAACC,EAAV,CAAa,YAAb,EAA2B,eAA3B,EAA4C,MAAM;MAChDd,sBAAsB,CAAC,IAAD,CAAtB;IACD,CAFD;EAGD;;EAEDzB,SAAS,CAAC,MAAM;IACd,IAAIoB,iBAAJ,EAAuB;MACrBiB,UAAU,CAACjB,iBAAD,CAAV;MACAoC,WAAW,CAACpC,iBAAD,CAAX;IACD;EACF,CALQ,EAKN,CAACA,iBAAD,CALM,CAAT;EAOApB,SAAS,CAAC,MAAM;IACd,IAAIoB,iBAAJ,EAAuB;MACrBd,iBAAiB,CAACqB,mBAAD,EAAsBP,iBAAtB,CAAjB;MACA,IAAIE,MAAJ,EAAYZ,QAAQ,CAACiB,mBAAD,EAAsBP,iBAAtB,EAAyCE,MAAzC,EAAiD,OAAjD,CAAR;IACb;EACF,CALQ,EAKN,CAACK,mBAAD,CALM,CAAT;EAOA3B,SAAS,CAAC,MAAM;IACd,IAAIoB,iBAAiB,IAAIW,gBAAgB,KAAK,IAA9C,EAAoD;MAClDd,qBAAqB,CAACG,iBAAD,CAArB;MAEAb,aAAa,CAACwB,gBAAD,EAAmBX,iBAAnB,CAAb;MACAX,iBAAiB,CAACsB,gBAAD,EAAmBX,iBAAnB,CAAjB;MAEAgB,gBAAgB,CAAC,IAAD,CAAhB;MAEA,IAAId,MAAJ,EAAYZ,QAAQ,CAACiB,mBAAD,EAAsBP,iBAAtB,EAAyCE,MAAzC,EAAiD,OAAjD,CAAR;;MACZ,IAAIU,aAAa,KAAK,IAAtB,EAA4B;QAC1B,MAAM6B,KAAK,GAAG3C,SAAS,CAACiB,QAAD,EAAWJ,gBAAgB,CAAC+B,UAAjB,CAA4BC,QAAvC,CAAvB;QAEA9B,gBAAgB,CAAC4B,KAAD,CAAhB;MACD;IACF,CAdD,MAcO,IAAIzC,iBAAJ,EAAuB;MAC5Bb,aAAa,CAAC,IAAD,EAAOa,iBAAP,CAAb;MACAZ,oBAAoB;MAEpBQ,cAAc,CAACgB,aAAD,EAAgBZ,iBAAhB,CAAd;IACD;EACF,CArBQ,EAqBN,CAACW,gBAAD,CArBM,CAAT;EAuBA,OAAO;IAAEX,iBAAF;IAAqBC;EAArB,CAAP;AACD,CArHD;;GAAMF,gB;UAIiFjB,sB,EACZC,mB,EAESC,gB,EAErDC,U;;;AA8G/B,eAAec,gBAAf"},"metadata":{},"sourceType":"module"}