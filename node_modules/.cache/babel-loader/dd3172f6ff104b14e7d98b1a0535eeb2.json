{"ast":null,"code":"var _jsxFileName = \"/Users/leonardogomes/Documents/atlas/atlas/src/components/Map/components/ClickablePopup/ClickablePopup.tsx\";\nimport React from 'react';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport { formatPopulationNumber } from '@utils/formatValue';\nimport { fitStateBounds, handleCleanStateLayer } from '../../hook/useStateLayer/stateActions';\nimport * as Styles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ClickablePopup(_ref) {\n  var _feature$properties;\n\n  let {\n    regionName,\n    reference,\n    feature\n  } = _ref;\n\n  const handleClickSection = () => {\n    handleCleanStateLayer(reference);\n    fitStateBounds(feature, reference);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Styles.Popup, {\n    children: [/*#__PURE__*/_jsxDEV(Styles.ClickableSection, {\n      onClick: handleCleanStateLayer,\n      children: [/*#__PURE__*/_jsxDEV(Styles.PopupText, {\n        children: regionName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Styles.IconWrapper, {\n        className: \"iconAction\",\n        children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Styles.PopupContent, {\n      children: /*#__PURE__*/_jsxDEV(Styles.PopupText, {\n        children: [\"Popula\\xE7\\xE3o: \", formatPopulationNumber((_feature$properties = feature.properties) === null || _feature$properties === void 0 ? void 0 : _feature$properties.POPULATION)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = ClickablePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClickablePopup\");","map":{"version":3,"names":["React","ChevronRightIcon","formatPopulationNumber","fitStateBounds","handleCleanStateLayer","Styles","ClickablePopup","regionName","reference","feature","handleClickSection","properties","POPULATION"],"sources":["/Users/leonardogomes/Documents/atlas/atlas/src/components/Map/components/ClickablePopup/ClickablePopup.tsx"],"sourcesContent":["import React from 'react';\nimport mapboxgl from 'mapbox-gl';\n\nimport { State } from '@customTypes/feature';\n\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\n\nimport { formatPopulationNumber } from '@utils/formatValue';\n\nimport { fitStateBounds, handleCleanStateLayer } from '../../hook/useStateLayer/stateActions';\nimport * as Styles from './styles';\ninterface Props {\n  regionName: string;\n  reference: mapboxgl.Map;\n  feature: State;\n}\n\nexport default function ClickablePopup({ regionName, reference, feature }: Props) {\n  const handleClickSection = () => {\n    handleCleanStateLayer(reference);\n    fitStateBounds(feature, reference);\n  };\n\n  return (\n    <Styles.Popup>\n      <Styles.ClickableSection onClick={handleCleanStateLayer}>\n        <Styles.PopupText>{regionName}</Styles.PopupText>\n        <Styles.IconWrapper className=\"iconAction\">\n          <ChevronRightIcon fontSize=\"small\" />\n        </Styles.IconWrapper>\n      </Styles.ClickableSection>\n\n      <Styles.PopupContent>\n        <Styles.PopupText>População: {formatPopulationNumber(feature.properties?.POPULATION)}</Styles.PopupText>\n      </Styles.PopupContent>\n    </Styles.Popup>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAKA,OAAOC,gBAAP,MAA6B,kCAA7B;AAEA,SAASC,sBAAT,QAAuC,oBAAvC;AAEA,SAASC,cAAT,EAAyBC,qBAAzB,QAAsD,uCAAtD;AACA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;;AAOA,eAAe,SAASC,cAAT,OAAmE;EAAA;;EAAA,IAA3C;IAAEC,UAAF;IAAcC,SAAd;IAAyBC;EAAzB,CAA2C;;EAChF,MAAMC,kBAAkB,GAAG,MAAM;IAC/BN,qBAAqB,CAACI,SAAD,CAArB;IACAL,cAAc,CAACM,OAAD,EAAUD,SAAV,CAAd;EACD,CAHD;;EAKA,oBACE,QAAC,MAAD,CAAQ,KAAR;IAAA,wBACE,QAAC,MAAD,CAAQ,gBAAR;MAAyB,OAAO,EAAEJ,qBAAlC;MAAA,wBACE,QAAC,MAAD,CAAQ,SAAR;QAAA,UAAmBG;MAAnB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,MAAD,CAAQ,WAAR;QAAoB,SAAS,EAAC,YAA9B;QAAA,uBACE,QAAC,gBAAD;UAAkB,QAAQ,EAAC;QAA3B;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAQE,QAAC,MAAD,CAAQ,YAAR;MAAA,uBACE,QAAC,MAAD,CAAQ,SAAR;QAAA,gCAA8BL,sBAAsB,wBAACO,OAAO,CAACE,UAAT,wDAAC,oBAAoBC,UAArB,CAApD;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;KApBuBN,c"},"metadata":{},"sourceType":"module"}