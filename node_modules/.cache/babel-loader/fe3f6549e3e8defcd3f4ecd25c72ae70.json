{"ast":null,"code":"var _jsxFileName = \"/home/leosilvagomes/Documentos/mit/br-dashboard/src/components/Map/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from \"react\";\nimport mapboxgl from \"mapbox-gl\"; //@ts-ignore\n\nimport geojsonURL from \"../../data/SP-geojson.json\";\nimport \"./styles.css\"; // import * as turf from \"@turf/turf\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Map = () => {\n  _s();\n\n  const [map] = useState(null);\n  const mapContainer = useRef(null);\n  useEffect(() => {\n    mapboxgl.accessToken = \"pk.eyJ1IjoibGVvc2lsdmFnb21lcyIsImEiOiJja2MwdmxhZjAwejdsMnlsbXFsYTV5ZmVsIn0.MyyvEV2SHjCbCkIUeL_9bA\";\n\n    const initializeMap = ({\n      mapContainer\n    }) => {\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/leosilvagomes/cksp5d5ae3qah17o1va6d4yon/draft\",\n        // stylesheet location\n        center: [-48.84, -22.5],\n        zoom: 6\n      });\n      console.log(geojsonURL);\n      map.on(\"load\", () => {\n        map.addSource(\"sp\", {\n          type: \"geojson\",\n          //@ts-ignore\n          data: geojsonURL,\n          promoteId: \"SP\"\n        });\n        map.addLayer({\n          id: \"sa2-borders\",\n          type: \"line\",\n          source: \"sp\",\n          //@ts-ignore\n          sourceLayer: \"original\",\n          layout: {},\n          paint: {\n            \"line-color\": [\"case\", [\"boolean\", [\"feature-state\", \"click\"], false], \"#fef4e1\", [\"boolean\", [\"feature-state\", \"highlight\"], false], \"#008000\", [\"boolean\", [\"feature-state\", \"hover\"], false], \"#fef4e1\", \"#fef4e1\"],\n            \"line-width\": [\"case\", [\"boolean\", [\"feature-state\", \"click\"], false], 2, [\"boolean\", [\"feature-state\", \"highlight\"], false], 2, [\"boolean\", [\"feature-state\", \"hover\"], false], 2, 0.75],\n            \"line-opacity\": [\"case\", [\"boolean\", [\"feature-state\", \"click\"], false], 1.5, [\"boolean\", [\"feature-state\", \"highlight\"], false], 1.5, [\"boolean\", [\"feature-state\", \"hover\"], false], 1.5, 0.5]\n          }\n        });\n      }); // map.on('click', (e) => {\n      //   map.addSource(\"sp\", {\n      //     type: \"geojson\",\n      //     //@ts-ignore\n      //     data: geojsonURL,\n      //   });\n      //   console.log(e.point)\n      //   console.log(e.lngLat.wrap());\n      // });\n    };\n\n    if (!map) initializeMap({\n      mapContainer\n    });\n  }, [map]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: el => mapContainer.current = el,\n    className: \"map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Map, \"fVm1wChoPOXjRxChQ/8bKd06460=\");\n\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/home/leosilvagomes/Documentos/mit/br-dashboard/src/components/Map/index.tsx"],"names":["useState","useRef","useEffect","mapboxgl","geojsonURL","Map","map","mapContainer","accessToken","initializeMap","container","current","style","center","zoom","console","log","on","addSource","type","data","promoteId","addLayer","id","source","sourceLayer","layout","paint","el"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\n//@ts-ignore\nimport geojsonURL from \"../../data/SP-geojson.json\";\nimport \"./styles.css\"\n// import * as turf from \"@turf/turf\";\n\nexport const Map = () => {\n  const [map] = useState(null);\n  const mapContainer = useRef<any>(null);\n\n  useEffect(() => {\n    mapboxgl.accessToken =\n      \"pk.eyJ1IjoibGVvc2lsdmFnb21lcyIsImEiOiJja2MwdmxhZjAwejdsMnlsbXFsYTV5ZmVsIn0.MyyvEV2SHjCbCkIUeL_9bA\";\n\n    const initializeMap = ({mapContainer }: any) => {\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/leosilvagomes/cksp5d5ae3qah17o1va6d4yon/draft\", // stylesheet location\n        center: [-48.84, -22.5],\n        zoom: 6,\n      });\n\n      console.log(geojsonURL)\n\n      map.on(\"load\", () => {\n        map.addSource(\"sp\", {\n          type: \"geojson\",\n          //@ts-ignore\n          data: geojsonURL,\n          promoteId: \"SP\",\n        });\n\n        map.addLayer({\n          id: \"sa2-borders\",\n          type: \"line\",\n          source: \"sp\",\n          //@ts-ignore\n          sourceLayer: \"original\",\n          layout: {},\n          paint: {\n            \"line-color\": [\n              \"case\",\n              [\"boolean\", [\"feature-state\", \"click\"], false],\n              \"#fef4e1\",\n              [\"boolean\", [\"feature-state\", \"highlight\"], false],\n              \"#008000\",\n              [\"boolean\", [\"feature-state\", \"hover\"], false],\n              \"#fef4e1\",\n              \"#fef4e1\",\n            ],\n            \"line-width\": [\n              \"case\",\n              [\"boolean\", [\"feature-state\", \"click\"], false],\n              2,\n              [\"boolean\", [\"feature-state\", \"highlight\"], false],\n              2,\n              [\"boolean\", [\"feature-state\", \"hover\"], false],\n              2,\n              0.75,\n            ],\n            \"line-opacity\": [\n              \"case\",\n              [\"boolean\", [\"feature-state\", \"click\"], false],\n              1.5,\n              [\"boolean\", [\"feature-state\", \"highlight\"], false],\n              1.5,\n              [\"boolean\", [\"feature-state\", \"hover\"], false],\n              1.5,\n              0.5,\n            ],\n          },\n        });\n      });\n\n      // map.on('click', (e) => {\n      //   map.addSource(\"sp\", {\n      //     type: \"geojson\",\n      //     //@ts-ignore\n      //     data: geojsonURL,\n      //   });\n      //   console.log(e.point)\n      //   console.log(e.lngLat.wrap());\n      // });\n    };\n\n    if (!map) initializeMap({mapContainer});\n  }, [map]);\n\n  return <div ref={(el) => (mapContainer.current = el)} className=\"map\" />;\n};\n"]},"metadata":{},"sourceType":"module"}