{"ast":null,"code":"var _jsxFileName = \"/Users/leonardogomes/Documents/atlas/atlas/src/pages/Main/Main.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport geojsonBR from '@data/BR_UF_2020.json';\nimport extremePopulationValues from '@data/ExtremePopValuesByState.json';\nimport { useState } from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { useSidebar } from '@store/sidebarContext';\nimport { useSelectedDistrict } from '@store/district/selectedContext';\nimport { useSelectedState } from '@store/state/selectedContext';\nimport Map from '@components/Map';\nimport Modal from '@components/Modal';\nimport Header from '@components/Header';\nimport Footer from '@components/Footer';\nimport Sidebar from '@components/Sidebar';\nimport InformationsBar from '@components/InformationsBar';\nimport CompatisonMode from '@components/ComparisonMode';\nimport { useMain } from './hook';\nimport * as Styles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const {\n    isSidebarOpen\n  } = useSidebar();\n  const {\n    selected\n  } = useSelectedDistrict();\n  const allStates = geojsonBR.features;\n  const theme = useTheme();\n  const [comparisonType, setComparisonType] = useState('table');\n  const {\n    isComparisonModeEnabled\n  } = useMain();\n  const {\n    selected: selectedState\n  } = useSelectedState();\n  const biggestState = allStates.reduce(function (prev, current) {\n    var _prev$properties, _current$properties;\n\n    return ((_prev$properties = prev.properties) === null || _prev$properties === void 0 ? void 0 : _prev$properties.POPULATION) > ((_current$properties = current.properties) === null || _current$properties === void 0 ? void 0 : _current$properties.POPULATION) ? prev : current;\n  });\n  const smallestState = allStates.reduce(function (prev, current) {\n    var _prev$properties2, _current$properties2;\n\n    return ((_prev$properties2 = prev.properties) === null || _prev$properties2 === void 0 ? void 0 : _prev$properties2.POPULATION) < ((_current$properties2 = current.properties) === null || _current$properties2 === void 0 ? void 0 : _current$properties2.POPULATION) ? prev : current;\n  });\n  const legendTick = !selectedState ? [smallestState.properties.POPULATION, biggestState.properties.POPULATION] : [extremePopulationValues[selectedState.properties.SIGLA_UF].MIN_POPULATION_DISTRICT.POPULATION, extremePopulationValues[selectedState.properties.SIGLA_UF].MAX_POPULATION_DISTRICT.POPULATION];\n  return /*#__PURE__*/_jsxDEV(Styles.MainContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      isComparisonMode: isComparisonModeEnabled,\n      title: selected === null || selected === void 0 ? void 0 : selected.properties.NM_MUN\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InformationsBar, {\n      legendTick: legendTick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Styles.ComparisonWrapper, {\n      isSidebarOpen: isSidebarOpen,\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        isComparisonModeOn: isComparisonModeEnabled,\n        comparisonType: comparisonType,\n        setComparisonType: setComparisonType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), isComparisonModeEnabled && /*#__PURE__*/_jsxDEV(CompatisonMode, {\n        comparisonType: comparisonType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"J3/uUW8fXNdf/Ga6KV8BP03yPbI=\", false, function () {\n  return [useSidebar, useSelectedDistrict, useTheme, useMain, useSelectedState];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","geojsonBR","extremePopulationValues","useState","useTheme","useSidebar","useSelectedDistrict","useSelectedState","Map","Modal","Header","Footer","Sidebar","InformationsBar","CompatisonMode","useMain","Styles","Main","isSidebarOpen","selected","allStates","features","theme","comparisonType","setComparisonType","isComparisonModeEnabled","selectedState","biggestState","reduce","prev","current","properties","POPULATION","smallestState","legendTick","SIGLA_UF","MIN_POPULATION_DISTRICT","MAX_POPULATION_DISTRICT","NM_MUN"],"sources":["/Users/leonardogomes/Documents/atlas/atlas/src/pages/Main/Main.tsx"],"sourcesContent":["import React from 'react';\n\nimport geojsonBR from '@data/BR_UF_2020.json';\nimport extremePopulationValues from '@data/ExtremePopValuesByState.json';\n\nimport { State } from '@customTypes/feature';\n\nimport { useState } from 'react';\n\nimport { useTheme } from '@mui/material/styles';\n\nimport { useSidebar } from '@store/sidebarContext';\nimport { useSelectedDistrict } from '@store/district/selectedContext';\nimport { useSelectedState } from '@store/state/selectedContext';\n\nimport Map from '@components/Map';\nimport Modal from '@components/Modal';\nimport Header from '@components/Header';\nimport Footer from '@components/Footer';\nimport Sidebar from '@components/Sidebar';\nimport InformationsBar from '@components/InformationsBar';\nimport CompatisonMode from '@components/ComparisonMode';\n\nimport { useMain } from './hook';\n\nimport * as Styles from './styles';\n\nconst Main = () => {\n  const { isSidebarOpen } = useSidebar();\n  const { selected } = useSelectedDistrict();\n\n  const allStates: Array<State> = geojsonBR.features;\n\n  const theme = useTheme();\n\n  const [comparisonType, setComparisonType] = useState('table');\n  const { isComparisonModeEnabled } = useMain();\n\n  const { selected: selectedState } = useSelectedState();\n\n  const biggestState: State = allStates.reduce(function (prev: any, current: any) {\n    return prev.properties?.POPULATION > current.properties?.POPULATION ? prev : current;\n  });\n\n  const smallestState: State = allStates.reduce(function (prev: any, current: any) {\n    return prev.properties?.POPULATION < current.properties?.POPULATION ? prev : current;\n  });\n\n  const legendTick: number[] = !selectedState\n    ? [smallestState.properties.POPULATION, biggestState.properties.POPULATION]\n    : [\n        extremePopulationValues[selectedState.properties.SIGLA_UF].MIN_POPULATION_DISTRICT.POPULATION,\n        extremePopulationValues[selectedState.properties.SIGLA_UF].MAX_POPULATION_DISTRICT.POPULATION,\n      ];\n\n  return (\n    <Styles.MainContainer>\n      <Modal />\n\n      <Sidebar isComparisonMode={isComparisonModeEnabled} title={selected?.properties.NM_MUN} />\n\n      <InformationsBar legendTick={legendTick} />\n\n      <Styles.ComparisonWrapper isSidebarOpen={isSidebarOpen} theme={theme}>\n        <Header\n          isComparisonModeOn={isComparisonModeEnabled}\n          comparisonType={comparisonType}\n          setComparisonType={setComparisonType}\n        />\n\n        {isComparisonModeEnabled && <CompatisonMode comparisonType={comparisonType} />}\n      </Styles.ComparisonWrapper>\n\n      <Map />\n\n      <Footer />\n    </Styles.MainContainer>\n  );\n};\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}