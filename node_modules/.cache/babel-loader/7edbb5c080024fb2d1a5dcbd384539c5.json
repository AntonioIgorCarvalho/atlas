{"ast":null,"code":"import _slicedToArray from\"/Users/leonardogomes/Documents/atlas/atlas/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{createContext,useContext,useState}from'react';import geojsonRS from'@data/states/RS_Municipios_2020.json';import{DEFAULT_VALUE}from'@hook/useFeature';import{jsx as _jsx}from\"react/jsx-runtime\";var selectedDistrictsContext=/*#__PURE__*/createContext(DEFAULT_VALUE);export function SelectedDistrictProvider(_ref){var children=_ref.children;//@ts-ignore\nvar allDistricts=geojsonRS['features'];var _useState=useState(allDistricts),_useState2=_slicedToArray(_useState,1),all=_useState2[0];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),selected=_useState4[0],setSelected=_useState4[1];return/*#__PURE__*/_jsx(selectedDistrictsContext.Provider,{value:{all:all,selected:selected,setSelected:setSelected},children:children});}export function useSelectedDistrict(){var context=useContext(selectedDistrictsContext);var district=context;return district;}","map":{"version":3,"names":["React","createContext","useContext","useState","geojsonRS","DEFAULT_VALUE","selectedDistrictsContext","SelectedDistrictProvider","children","allDistricts","all","selected","setSelected","useSelectedDistrict","context","district"],"sources":["/Users/leonardogomes/Documents/atlas/atlas/src/store/district/selectedContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nimport { District } from '@customTypes/feature';\n\nimport geojsonRS from '@data/states/RS_Municipios_2020.json';\n\nimport { DEFAULT_VALUE } from '@hook/useFeature';\n\ninterface DistrictActions {\n  all: Array<District>;\n  selected: District | null;\n  setSelected: React.Dispatch<React.SetStateAction<any>>;\n}\n\nconst selectedDistrictsContext = createContext<DistrictActions>(DEFAULT_VALUE);\n\nexport function SelectedDistrictProvider({ children }: any) {\n  //@ts-ignore\n  const allDistricts: Array<District> = geojsonRS['features'];\n\n  const [all] = useState(allDistricts);\n  const [selected, setSelected] = useState(null);\n\n  return (\n    <selectedDistrictsContext.Provider\n      value={{\n        all,\n        selected,\n        setSelected,\n      }}\n    >\n      {children}\n    </selectedDistrictsContext.Provider>\n  );\n}\n\nexport function useSelectedDistrict() {\n  const context = useContext(selectedDistrictsContext);\n  const district = context;\n  return district;\n}\n"],"mappings":"gIAAA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,CAA+BC,UAA/B,CAA2CC,QAA3C,KAA2D,OAA3D,CAIA,MAAOC,CAAAA,SAAP,KAAsB,sCAAtB,CAEA,OAASC,aAAT,KAA8B,kBAA9B,C,2CAQA,GAAMC,CAAAA,wBAAwB,cAAGL,aAAa,CAAkBI,aAAlB,CAA9C,CAEA,MAAO,SAASE,CAAAA,wBAAT,MAAqD,IAAjBC,CAAAA,QAAiB,MAAjBA,QAAiB,CAC1D;AACA,GAAMC,CAAAA,YAA6B,CAAGL,SAAS,CAAC,UAAD,CAA/C,CAEA,cAAcD,QAAQ,CAACM,YAAD,CAAtB,wCAAOC,GAAP,eACA,eAAgCP,QAAQ,CAAC,IAAD,CAAxC,yCAAOQ,QAAP,eAAiBC,WAAjB,eAEA,mBACE,KAAC,wBAAD,CAA0B,QAA1B,EACE,KAAK,CAAE,CACLF,GAAG,CAAHA,GADK,CAELC,QAAQ,CAARA,QAFK,CAGLC,WAAW,CAAXA,WAHK,CADT,UAOGJ,QAPH,EADF,CAWD,CAED,MAAO,SAASK,CAAAA,mBAAT,EAA+B,CACpC,GAAMC,CAAAA,OAAO,CAAGZ,UAAU,CAACI,wBAAD,CAA1B,CACA,GAAMS,CAAAA,QAAQ,CAAGD,OAAjB,CACA,MAAOC,CAAAA,QAAP,CACD"},"metadata":{},"sourceType":"module"}