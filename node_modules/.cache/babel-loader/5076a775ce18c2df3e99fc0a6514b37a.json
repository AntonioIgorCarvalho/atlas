{"ast":null,"code":"var _jsxFileName = \"/home/leosilvagomes/Documentos/mit/br-dashboard/src/components/Map/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from \"react\";\nimport mapboxgl from \"mapbox-gl\"; //@ts-ignore\n\nimport geojsonURL from \"../../data/SP-districts.json\";\nimport \"./styles.css\"; // import * as turf from \"@turf/turf\";\n// import * as turf from \"@turf/turf\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Map = () => {\n  _s();\n\n  const [map] = useState(null);\n  const mapContainer = useRef(null);\n  useEffect(() => {\n    mapboxgl.accessToken = \"pk.eyJ1IjoibGVvc2lsdmFnb21lcyIsImEiOiJja2MwdmxhZjAwejdsMnlsbXFsYTV5ZmVsIn0.MyyvEV2SHjCbCkIUeL_9bA\";\n\n    const initializeMap = ({\n      mapContainer\n    }) => {\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/leosilvagomes/cku2qu4ks2mgz17r100gt7rq6/draft\",\n        center: [-48.84, -22.5],\n        zoom: 6\n      }); // const hoveredPopup = new mapboxgl.Popup({\n      //   closeButton: false,\n      //   closeOnClick: false,\n      //   className: \"floating-popup\",\n      // });\n      // const highlightFeature = (feature : any) => {\n      //   if (feature && feature.geometry) {\n      //     var coordinates = turf.centerOfMass(feature).geometry.coordinates;\n      //     var regionName = feature.properties.name;\n      //     var regionPersonsNum = feature.properties.persons_num;\n      //     hoveredPopup\n      //       .setLngLat([coordinates[0], coordinates[1]])\n      //       .setHTML(`<h5>${regionName} - ${regionPersonsNum}</h5>`)\n      //       .addTo(map);\n      //   } else {\n      //     hoveredPopup.remove();\n      //   }\n      // }\n      // const clearFeatureHighlight = () => {\n      //   highlightFeature(null);\n      // }\n\n      map.on(\"load\", () => {\n        map.dragRotate.disable();\n        map.touchZoomRotate.disableRotation();\n        map.addSource(\"sp\", {\n          type: \"geojson\",\n          //@ts-ignore\n          data: geojsonURL,\n          promoteId: \"SP\"\n        });\n        const ll = new mapboxgl.LngLat(330995.4493533144705, 7407882.88195164129138);\n        const wrapped = ll.wrap();\n        console.log(wrapped.lng);\n        map.addLayer({\n          id: \"fill-sp\",\n          type: \"fill\",\n          source: \"sp\",\n          paint: {\n            \"fill-color\": \"#ADDC91\",\n            // {\n            //   property: \"persons_num\",\n            //   stops: [\n            //     [0, \"#ADDC91\"],\n            //     [5152, \"#6CC24A\"],\n            //     [12799, \"#509E2F\"],\n            //     [38695, \"#4A7729\"],\n            //   ],\n            // },\n            \"fill-opacity\": 0.8\n          }\n        });\n        map.addLayer({\n          id: \"sp-borders\",\n          type: \"line\",\n          source: \"sp\",\n          paint: {\n            \"line-color\": \"#ffffff\",\n            \"line-width\": 0.8,\n            \"line-opacity\": 1\n          }\n        });\n      }); // new mapboxgl.Popup({ closeOnClick: false })\n      //   .setLngLat([-48.84, -22.5])\n      //   .setHTML('<h1>Hello World!</h1>')\n      //   .addTo(map);\n      // map.on(\"mousemove\", \"fill-sp\", (e: any) => {\n      //   if (e.features.length > 0) {\n      //     highlightFeature(e.features[0]);\n      //   }\n      // });\n      // map.on(\"mouseleave\", \"fill-sp\", clearFeatureHighlight);\n    };\n\n    if (!map) initializeMap({\n      mapContainer\n    });\n  }, [map]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: el => mapContainer.current = el,\n    className: \"map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Map, \"fVm1wChoPOXjRxChQ/8bKd06460=\");\n\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/home/leosilvagomes/Documentos/mit/br-dashboard/src/components/Map/index.tsx"],"names":["useState","useRef","useEffect","mapboxgl","geojsonURL","Map","map","mapContainer","accessToken","initializeMap","container","current","style","center","zoom","on","dragRotate","disable","touchZoomRotate","disableRotation","addSource","type","data","promoteId","ll","LngLat","wrapped","wrap","console","log","lng","addLayer","id","source","paint","el"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAO,cAAP,C,CACA;AACA;;;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,GAAD,IAAQN,QAAQ,CAAC,IAAD,CAAtB;AACA,QAAMO,YAAY,GAAGN,MAAM,CAAM,IAAN,CAA3B;AAIAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,QAAQ,CAACK,WAAT,GACE,mGADF;;AAGA,UAAMC,aAAa,GAAG,CAAC;AAACF,MAAAA;AAAD,KAAD,KAA0B;AAC9C,YAAMD,GAAG,GAAG,IAAIH,QAAQ,CAACE,GAAb,CAAiB;AAC3BK,QAAAA,SAAS,EAAEH,YAAY,CAACI,OADG;AAE3BC,QAAAA,KAAK,EAAE,+DAFoB;AAG3BC,QAAAA,MAAM,EAAE,CAAC,CAAC,KAAF,EAAS,CAAC,IAAV,CAHmB;AAI3BC,QAAAA,IAAI,EAAE;AAJqB,OAAjB,CAAZ,CAD8C,CAQ9C;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEAR,MAAAA,GAAG,CAACS,EAAJ,CAAO,MAAP,EAAe,MAAM;AACnBT,QAAAA,GAAG,CAACU,UAAJ,CAAeC,OAAf;AACAX,QAAAA,GAAG,CAACY,eAAJ,CAAoBC,eAApB;AAEAb,QAAAA,GAAG,CAACc,SAAJ,CAAc,IAAd,EAAoB;AAClBC,UAAAA,IAAI,EAAE,SADY;AAElB;AACAC,UAAAA,IAAI,EAAElB,UAHY;AAIlBmB,UAAAA,SAAS,EAAE;AAJO,SAApB;AAOA,cAAMC,EAAE,GAAG,IAAIrB,QAAQ,CAACsB,MAAb,CAAoB,oBAApB,EAA0C,sBAA1C,CAAX;AACA,cAAMC,OAAO,GAAGF,EAAE,CAACG,IAAH,EAAhB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACI,GAApB;AAGAxB,QAAAA,GAAG,CAACyB,QAAJ,CAAa;AACXC,UAAAA,EAAE,EAAE,SADO;AAEXX,UAAAA,IAAI,EAAE,MAFK;AAGXY,UAAAA,MAAM,EAAE,IAHG;AAIXC,UAAAA,KAAK,EAAE;AACL,0BAAc,SADT;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAAgB;AAXX;AAJI,SAAb;AAmBA5B,QAAAA,GAAG,CAACyB,QAAJ,CAAa;AACXC,UAAAA,EAAE,EAAE,YADO;AAEXX,UAAAA,IAAI,EAAE,MAFK;AAGXY,UAAAA,MAAM,EAAE,IAHG;AAIXC,UAAAA,KAAK,EAAE;AACL,0BAAc,SADT;AAEL,0BAAc,GAFT;AAGL,4BAAgB;AAHX;AAJI,SAAb;AAUD,OA7CD,EAhC8C,CA+E9C;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAED,KA5FD;;AA8FA,QAAI,CAAC5B,GAAL,EAAUG,aAAa,CAAC;AAACF,MAAAA;AAAD,KAAD,CAAb;AACX,GAnGQ,EAmGN,CAACD,GAAD,CAnGM,CAAT;AAqGA,sBAAO;AAAK,IAAA,GAAG,EAAG6B,EAAD,IAAS5B,YAAY,CAACI,OAAb,GAAuBwB,EAA1C;AAA+C,IAAA,SAAS,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA5GM;;GAAM9B,G;;KAAAA,G","sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\n//@ts-ignore\nimport geojsonURL from \"../../data/SP-districts.json\";\nimport \"./styles.css\"\n// import * as turf from \"@turf/turf\";\n// import * as turf from \"@turf/turf\";\n\nexport const Map = () => {\n  const [map] = useState(null);\n  const mapContainer = useRef<any>(null);\n  \n\n\n  useEffect(() => {\n    mapboxgl.accessToken =\n      \"pk.eyJ1IjoibGVvc2lsdmFnb21lcyIsImEiOiJja2MwdmxhZjAwejdsMnlsbXFsYTV5ZmVsIn0.MyyvEV2SHjCbCkIUeL_9bA\";\n\n    const initializeMap = ({mapContainer }: any) => {\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/leosilvagomes/cku2qu4ks2mgz17r100gt7rq6/draft\",\n        center: [-48.84, -22.5],\n        zoom: 6,\n      });\n\n      // const hoveredPopup = new mapboxgl.Popup({\n      //   closeButton: false,\n      //   closeOnClick: false,\n      //   className: \"floating-popup\",\n      // });\n\n      // const highlightFeature = (feature : any) => {\n      //   if (feature && feature.geometry) {\n      //     var coordinates = turf.centerOfMass(feature).geometry.coordinates;\n      //     var regionName = feature.properties.name;\n      //     var regionPersonsNum = feature.properties.persons_num;\n      //     hoveredPopup\n      //       .setLngLat([coordinates[0], coordinates[1]])\n      //       .setHTML(`<h5>${regionName} - ${regionPersonsNum}</h5>`)\n      //       .addTo(map);\n      //   } else {\n      //     hoveredPopup.remove();\n      //   }\n      // }\n\n      // const clearFeatureHighlight = () => {\n      //   highlightFeature(null);\n      // }\n      \n      map.on(\"load\", () => {\n        map.dragRotate.disable();\n        map.touchZoomRotate.disableRotation();\n\n        map.addSource(\"sp\", {\n          type: \"geojson\",\n          //@ts-ignore\n          data: geojsonURL,\n          promoteId: \"SP\",\n        });\n\n        const ll = new mapboxgl.LngLat(330995.4493533144705, 7407882.88195164129138);\n        const wrapped = ll.wrap();\n        console.log(wrapped.lng);\n\n\n        map.addLayer({\n          id: \"fill-sp\",\n          type: \"fill\",\n          source: \"sp\",\n          paint: {\n            \"fill-color\": \"#ADDC91\",\n            // {\n            //   property: \"persons_num\",\n            //   stops: [\n            //     [0, \"#ADDC91\"],\n            //     [5152, \"#6CC24A\"],\n            //     [12799, \"#509E2F\"],\n            //     [38695, \"#4A7729\"],\n            //   ],\n            // },\n            \"fill-opacity\": 0.8\n          },\n        });\n\n        map.addLayer({\n          id: \"sp-borders\",\n          type: \"line\",\n          source: \"sp\",\n          paint: {\n            \"line-color\": \"#ffffff\",\n            \"line-width\": 0.8,\n            \"line-opacity\": 1,\n          },\n        });\n      });\n\n      // new mapboxgl.Popup({ closeOnClick: false })\n      //   .setLngLat([-48.84, -22.5])\n      //   .setHTML('<h1>Hello World!</h1>')\n      //   .addTo(map);\n\n      // map.on(\"mousemove\", \"fill-sp\", (e: any) => {\n      //   if (e.features.length > 0) {\n      //     highlightFeature(e.features[0]);\n      //   }\n      // });\n\n      // map.on(\"mouseleave\", \"fill-sp\", clearFeatureHighlight);\n\n    };\n\n    if (!map) initializeMap({mapContainer});\n  }, [map]);\n\n  return <div ref={(el) => (mapContainer.current = el)} className=\"map\" />;\n};\n"]},"metadata":{},"sourceType":"module"}