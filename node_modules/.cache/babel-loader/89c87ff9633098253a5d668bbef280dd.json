{"ast":null,"code":"export var formatPopulationNumber=function formatPopulationNumber(value){var valueStr=value.toString();var src=valueStr.replace(/[^\\d/]/g,'');var numbers=src.replace(/[^\\d]/g,'');var out=[];for(var i=numbers.length-1,j=1;i>=0;i--,j++){out.push(numbers[i]);if(j%3===0&&i!==0){out.push(',');}}out.reverse();var outString=out.join('');return outString;};export var formatValue=function formatValue(value,format){if(value===undefined||value===null){return'n/a';}switch(format){case'population':return formatPopulationNumber(value);case'percent':return\"\".concat(Math.floor(parseFloat(value)),\"%\");case'percent_normalized':return\"\".concat((value*100.0).toFixed(2),\"%\");case'float_2':return value?\"\".concat(parseFloat(String(value).replace(/,/g,'.')).toFixed(2)):'';case'float_3':return value?\"\".concat(parseFloat(String(value).replace(/,/g,'.')).toFixed(3)):'';default:return value?value+'':'-';}};","map":{"version":3,"names":["formatPopulationNumber","value","valueStr","toString","src","replace","numbers","out","i","length","j","push","reverse","outString","join","formatValue","format","undefined","Math","floor","parseFloat","toFixed","String"],"sources":["/Users/leonardogomes/Documents/atlas/atlas/src/utils/formatValue.ts"],"sourcesContent":["export const formatPopulationNumber = (value: any) => {\n  const valueStr = value.toString();\n  const src = valueStr.replace(/[^\\d/]/g, '');\n  const numbers = src.replace(/[^\\d]/g, '');\n  const out: any = [];\n\n  for (let i = numbers.length - 1, j = 1; i >= 0; i--, j++) {\n    out.push(numbers[i]);\n    if (j % 3 === 0 && i !== 0) {\n      out.push(',');\n    }\n  }\n\n  out.reverse();\n  const outString = out.join('');\n  return outString;\n};\n\nexport const formatValue = (value: any, format: string) => {\n  if (value === undefined || value === null) {\n    return 'n/a';\n  }\n\n  switch (format) {\n    case 'population':\n      return formatPopulationNumber(value);\n    case 'percent':\n      return `${Math.floor(parseFloat(value))}%`;\n    case 'percent_normalized':\n      return `${(value * 100.0).toFixed(2)}%`;\n    case 'float_2':\n      return value ? `${parseFloat(String(value).replace(/,/g, '.')).toFixed(2)}` : '';\n    case 'float_3':\n      return value ? `${parseFloat(String(value).replace(/,/g, '.')).toFixed(3)}` : '';\n    default:\n      return value ? value + '' : '-';\n  }\n};\n"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,KAAD,CAAgB,CACpD,GAAMC,CAAAA,QAAQ,CAAGD,KAAK,CAACE,QAAN,EAAjB,CACA,GAAMC,CAAAA,GAAG,CAAGF,QAAQ,CAACG,OAAT,CAAiB,SAAjB,CAA4B,EAA5B,CAAZ,CACA,GAAMC,CAAAA,OAAO,CAAGF,GAAG,CAACC,OAAJ,CAAY,QAAZ,CAAsB,EAAtB,CAAhB,CACA,GAAME,CAAAA,GAAQ,CAAG,EAAjB,CAEA,IAAK,GAAIC,CAAAA,CAAC,CAAGF,OAAO,CAACG,MAAR,CAAiB,CAAzB,CAA4BC,CAAC,CAAG,CAArC,CAAwCF,CAAC,EAAI,CAA7C,CAAgDA,CAAC,GAAIE,CAAC,EAAtD,CAA0D,CACxDH,GAAG,CAACI,IAAJ,CAASL,OAAO,CAACE,CAAD,CAAhB,EACA,GAAIE,CAAC,CAAG,CAAJ,GAAU,CAAV,EAAeF,CAAC,GAAK,CAAzB,CAA4B,CAC1BD,GAAG,CAACI,IAAJ,CAAS,GAAT,EACD,CACF,CAEDJ,GAAG,CAACK,OAAJ,GACA,GAAMC,CAAAA,SAAS,CAAGN,GAAG,CAACO,IAAJ,CAAS,EAAT,CAAlB,CACA,MAAOD,CAAAA,SAAP,CACD,CAhBM,CAkBP,MAAO,IAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACd,KAAD,CAAae,MAAb,CAAgC,CACzD,GAAIf,KAAK,GAAKgB,SAAV,EAAuBhB,KAAK,GAAK,IAArC,CAA2C,CACzC,MAAO,KAAP,CACD,CAED,OAAQe,MAAR,EACE,IAAK,YAAL,CACE,MAAOhB,CAAAA,sBAAsB,CAACC,KAAD,CAA7B,CACF,IAAK,SAAL,CACE,gBAAUiB,IAAI,CAACC,KAAL,CAAWC,UAAU,CAACnB,KAAD,CAArB,CAAV,MACF,IAAK,oBAAL,CACE,gBAAU,CAACA,KAAK,CAAG,KAAT,EAAgBoB,OAAhB,CAAwB,CAAxB,CAAV,MACF,IAAK,SAAL,CACE,MAAOpB,CAAAA,KAAK,WAAMmB,UAAU,CAACE,MAAM,CAACrB,KAAD,CAAN,CAAcI,OAAd,CAAsB,IAAtB,CAA4B,GAA5B,CAAD,CAAV,CAA6CgB,OAA7C,CAAqD,CAArD,CAAN,EAAkE,EAA9E,CACF,IAAK,SAAL,CACE,MAAOpB,CAAAA,KAAK,WAAMmB,UAAU,CAACE,MAAM,CAACrB,KAAD,CAAN,CAAcI,OAAd,CAAsB,IAAtB,CAA4B,GAA5B,CAAD,CAAV,CAA6CgB,OAA7C,CAAqD,CAArD,CAAN,EAAkE,EAA9E,CACF,QACE,MAAOpB,CAAAA,KAAK,CAAGA,KAAK,CAAG,EAAX,CAAgB,GAA5B,CAZJ,CAcD,CAnBM"},"metadata":{},"sourceType":"module"}