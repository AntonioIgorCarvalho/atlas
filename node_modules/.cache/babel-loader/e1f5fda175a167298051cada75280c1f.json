{"ast":null,"code":"var _jsxFileName = \"/home/leosilvagomes/Documentos/mit/br-dashboard/src/components/Map/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from \"react\";\nimport mapboxgl from \"mapbox-gl\"; //@ts-ignore\n\nimport geojsonURL from \"../../data/SP-geojson.json\";\nimport \"./styles.css\";\nimport * as turf from \"@turf/turf\"; // import * as turf from \"@turf/turf\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Map = () => {\n  _s();\n\n  const [map] = useState(null);\n  const mapContainer = useRef(null);\n  const [hoveredPopup] = useState(new mapboxgl.Popup({\n    closeButton: false,\n    closeOnClick: false,\n    className: \"floating-popup\"\n  }));\n  useEffect(() => {\n    mapboxgl.accessToken = \"pk.eyJ1IjoibGVvc2lsdmFnb21lcyIsImEiOiJja2MwdmxhZjAwejdsMnlsbXFsYTV5ZmVsIn0.MyyvEV2SHjCbCkIUeL_9bA\";\n\n    const initializeMap = ({\n      mapContainer\n    }) => {\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/leosilvagomes/cku2qu4ks2mgz17r100gt7rq6/draft\",\n        center: [-48.84, -22.5],\n        zoom: 6\n      });\n\n      const highlightFeature = feature => {\n        if (feature && feature.geometry) {\n          var coordinates = turf.centerOfMass(feature).geometry.coordinates;\n          console.log(coordinates);\n          var regionName = feature.properties.name;\n          var regionPersonsNum = feature.properties.persons_num;\n          hoveredPopup.setLngLat(coordinates).setHTML(`<h5>${regionName} - ${regionPersonsNum}</h5>`).addTo(map);\n        } else {\n          hoveredPopup.remove();\n        }\n      }; // const clearFeatureHighlight = () => {\n      //   highlightFeature(null);\n      // }\n\n\n      map.on(\"load\", () => {\n        map.dragRotate.disable();\n        map.touchZoomRotate.disableRotation();\n        map.addSource(\"sp\", {\n          type: \"geojson\",\n          //@ts-ignore\n          data: geojsonURL,\n          promoteId: \"SP\"\n        });\n        map.addLayer({\n          id: \"fill-sp\",\n          type: \"fill\",\n          source: \"sp\",\n          paint: {\n            \"fill-color\": {\n              property: \"persons_num\",\n              stops: [[0, \"#ADDC91\"], [5152, \"#6CC24A\"], [12799, \"#509E2F\"], [38695, \"#4A7729\"]]\n            },\n            \"fill-opacity\": 0.8\n          }\n        });\n        map.addLayer({\n          id: \"sp-borders\",\n          type: \"line\",\n          source: \"sp\",\n          paint: {\n            \"line-color\": \"#ffffff\",\n            \"line-width\": 0.8,\n            \"line-opacity\": 1\n          }\n        });\n      });\n      map.on(\"mousemove\", \"fill-sp\", e => {\n        if (e.features.length > 0) {\n          highlightFeature(e.features[0]);\n        }\n      }); // map.on(\"mouseleave\", \"fill-sp\", clearFeatureHighlight);\n    };\n\n    if (!map) initializeMap({\n      mapContainer\n    });\n  }, [map, hoveredPopup]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: el => mapContainer.current = el,\n    className: \"map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Map, \"ukj7ZYi2EdMAyCT/+19mUwoKFtE=\");\n\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/home/leosilvagomes/Documentos/mit/br-dashboard/src/components/Map/index.tsx"],"names":["useState","useRef","useEffect","mapboxgl","geojsonURL","turf","Map","map","mapContainer","hoveredPopup","Popup","closeButton","closeOnClick","className","accessToken","initializeMap","container","current","style","center","zoom","highlightFeature","feature","geometry","coordinates","centerOfMass","console","log","regionName","properties","name","regionPersonsNum","persons_num","setLngLat","setHTML","addTo","remove","on","dragRotate","disable","touchZoomRotate","disableRotation","addSource","type","data","promoteId","addLayer","id","source","paint","property","stops","e","features","length","el"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\n//@ts-ignore\nimport geojsonURL from \"../../data/SP-geojson.json\";\nimport \"./styles.css\"\nimport * as turf from \"@turf/turf\";\n// import * as turf from \"@turf/turf\";\n\nexport const Map = () => {\n  const [map] = useState(null);\n  const mapContainer = useRef<any>(null);\n  const [hoveredPopup]= useState(new mapboxgl.Popup({\n    closeButton: false,\n    closeOnClick: false,\n    className: \"floating-popup\",\n  }));\n\n\n  useEffect(() => {\n    mapboxgl.accessToken =\n      \"pk.eyJ1IjoibGVvc2lsdmFnb21lcyIsImEiOiJja2MwdmxhZjAwejdsMnlsbXFsYTV5ZmVsIn0.MyyvEV2SHjCbCkIUeL_9bA\";\n\n    const initializeMap = ({mapContainer }: any) => {\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/leosilvagomes/cku2qu4ks2mgz17r100gt7rq6/draft\",\n        center: [-48.84, -22.5],\n        zoom: 6,\n      });\n\n      const highlightFeature = (feature : any) => {\n        if (feature && feature.geometry) {\n          var coordinates = turf.centerOfMass(feature).geometry.coordinates;\n\n          console.log(coordinates)\n\n          var regionName = feature.properties.name;\n          var regionPersonsNum = feature.properties.persons_num;\n          hoveredPopup\n            .setLngLat(coordinates)\n            .setHTML(`<h5>${regionName} - ${regionPersonsNum}</h5>`)\n            .addTo(map);\n\n        } else {\n          hoveredPopup.remove();\n        }\n      }\n\n      // const clearFeatureHighlight = () => {\n      //   highlightFeature(null);\n      // }\n      \n      map.on(\"load\", () => {\n        map.dragRotate.disable();\n        map.touchZoomRotate.disableRotation();\n\n        map.addSource(\"sp\", {\n          type: \"geojson\",\n          //@ts-ignore\n          data: geojsonURL,\n          promoteId: \"SP\",\n        });\n\n\n        map.addLayer({\n          id: \"fill-sp\",\n          type: \"fill\",\n          source: \"sp\",\n          paint: {\n            \"fill-color\": {\n              property: \"persons_num\",\n              stops: [\n                [0, \"#ADDC91\"],\n                [5152, \"#6CC24A\"],\n                [12799, \"#509E2F\"],\n                [38695, \"#4A7729\"],\n              ],\n            },\n            \"fill-opacity\": 0.8\n          },\n        });\n\n        map.addLayer({\n          id: \"sp-borders\",\n          type: \"line\",\n          source: \"sp\",\n          paint: {\n            \"line-color\": \"#ffffff\",\n            \"line-width\": 0.8,\n            \"line-opacity\": 1,\n          },\n        });\n      });\n\n      map.on(\"mousemove\", \"fill-sp\", (e: any) => {\n        if (e.features.length > 0) {\n          highlightFeature(e.features[0]);\n        }\n      });\n\n      // map.on(\"mouseleave\", \"fill-sp\", clearFeatureHighlight);\n\n    };\n\n    if (!map) initializeMap({mapContainer});\n  }, [map, hoveredPopup]);\n\n  return <div ref={(el) => (mapContainer.current = el)} className=\"map\" />;\n};\n"]},"metadata":{},"sourceType":"module"}