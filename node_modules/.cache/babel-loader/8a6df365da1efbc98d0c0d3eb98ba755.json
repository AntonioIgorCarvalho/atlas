{"ast":null,"code":"export function getColorFromGradient(min,max,value){var minColor=stringToColor(min);var maxColor=stringToColor(max);var getRGBColor=function getRGBColor(color){return Math.round((maxColor[color]-minColor[color])*value+minColor[color]);};var gradient={red:getRGBColor('red'),green:getRGBColor('green'),blue:getRGBColor('blue')};var result=\"rgb(\".concat(Object.values(gradient).join(','),\")\");return result;}export function lightOrDark(color){var rgb=stringToColor(color);var hsp=Math.sqrt(0.299*(rgb.red*rgb.red)+0.587*(rgb.green*rgb.green)+0.114*(rgb.blue*rgb.blue));if(hsp>127.5){return'black';}else{return'white';}}var stringToColor=function stringToColor(rgb){var array=rgb.replace(/rgba?\\((.*)\\)/,'$1').split(',');var color={red:Number(array[0]),green:Number(array[1]),blue:Number(array[2])};return color;};","map":{"version":3,"names":["getColorFromGradient","min","max","value","minColor","stringToColor","maxColor","getRGBColor","color","Math","round","gradient","red","green","blue","result","Object","values","join","lightOrDark","rgb","hsp","sqrt","array","replace","split","Number"],"sources":["/Users/leonardogomes/Documents/atlas/atlas/src/utils/colorManipulator.ts"],"sourcesContent":["export function getColorFromGradient(min: string, max: string, value: number) {\n  const minColor = stringToColor(min);\n  const maxColor = stringToColor(max);\n\n  const getRGBColor = (color: 'red' | 'green' | 'blue') => {\n    return Math.round((maxColor[color] - minColor[color]) * value + minColor[color]);\n  };\n\n  const gradient = {\n    red: getRGBColor('red'),\n    green: getRGBColor('green'),\n    blue: getRGBColor('blue'),\n  };\n\n  const result = `rgb(${Object.values(gradient).join(',')})`;\n  return result;\n}\n\nexport function lightOrDark(color: string) {\n  const rgb = stringToColor(color);\n\n  const hsp = Math.sqrt(0.299 * (rgb.red * rgb.red) + 0.587 * (rgb.green * rgb.green) + 0.114 * (rgb.blue * rgb.blue));\n\n  if (hsp > 127.5) {\n    return 'black';\n  } else {\n    return 'white';\n  }\n}\n\nconst stringToColor = (rgb: string) => {\n  const array = rgb.replace(/rgba?\\((.*)\\)/, '$1').split(',');\n  const color = {\n    red: Number(array[0]),\n    green: Number(array[1]),\n    blue: Number(array[2]),\n  };\n  return color;\n};\n"],"mappings":"AAAA,MAAO,SAASA,CAAAA,oBAAT,CAA8BC,GAA9B,CAA2CC,GAA3C,CAAwDC,KAAxD,CAAuE,CAC5E,GAAMC,CAAAA,QAAQ,CAAGC,aAAa,CAACJ,GAAD,CAA9B,CACA,GAAMK,CAAAA,QAAQ,CAAGD,aAAa,CAACH,GAAD,CAA9B,CAEA,GAAMK,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAqC,CACvD,MAAOC,CAAAA,IAAI,CAACC,KAAL,CAAW,CAACJ,QAAQ,CAACE,KAAD,CAAR,CAAkBJ,QAAQ,CAACI,KAAD,CAA3B,EAAsCL,KAAtC,CAA8CC,QAAQ,CAACI,KAAD,CAAjE,CAAP,CACD,CAFD,CAIA,GAAMG,CAAAA,QAAQ,CAAG,CACfC,GAAG,CAAEL,WAAW,CAAC,KAAD,CADD,CAEfM,KAAK,CAAEN,WAAW,CAAC,OAAD,CAFH,CAGfO,IAAI,CAAEP,WAAW,CAAC,MAAD,CAHF,CAAjB,CAMA,GAAMQ,CAAAA,MAAM,eAAUC,MAAM,CAACC,MAAP,CAAcN,QAAd,EAAwBO,IAAxB,CAA6B,GAA7B,CAAV,KAAZ,CACA,MAAOH,CAAAA,MAAP,CACD,CAED,MAAO,SAASI,CAAAA,WAAT,CAAqBX,KAArB,CAAoC,CACzC,GAAMY,CAAAA,GAAG,CAAGf,aAAa,CAACG,KAAD,CAAzB,CAEA,GAAMa,CAAAA,GAAG,CAAGZ,IAAI,CAACa,IAAL,CAAU,OAASF,GAAG,CAACR,GAAJ,CAAUQ,GAAG,CAACR,GAAvB,EAA8B,OAASQ,GAAG,CAACP,KAAJ,CAAYO,GAAG,CAACP,KAAzB,CAA9B,CAAgE,OAASO,GAAG,CAACN,IAAJ,CAAWM,GAAG,CAACN,IAAxB,CAA1E,CAAZ,CAEA,GAAIO,GAAG,CAAG,KAAV,CAAiB,CACf,MAAO,OAAP,CACD,CAFD,IAEO,CACL,MAAO,OAAP,CACD,CACF,CAED,GAAMhB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACe,GAAD,CAAiB,CACrC,GAAMG,CAAAA,KAAK,CAAGH,GAAG,CAACI,OAAJ,CAAY,eAAZ,CAA6B,IAA7B,EAAmCC,KAAnC,CAAyC,GAAzC,CAAd,CACA,GAAMjB,CAAAA,KAAK,CAAG,CACZI,GAAG,CAAEc,MAAM,CAACH,KAAK,CAAC,CAAD,CAAN,CADC,CAEZV,KAAK,CAAEa,MAAM,CAACH,KAAK,CAAC,CAAD,CAAN,CAFD,CAGZT,IAAI,CAAEY,MAAM,CAACH,KAAK,CAAC,CAAD,CAAN,CAHA,CAAd,CAKA,MAAOf,CAAAA,KAAP,CACD,CARD"},"metadata":{},"sourceType":"module"}